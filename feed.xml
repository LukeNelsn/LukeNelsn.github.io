<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator><link href="https://lukenelsn.github.io/jekyll-theme-yat/feed.xml" rel="self" type="application/atom+xml" /><link href="https://lukenelsn.github.io/jekyll-theme-yat/" rel="alternate" type="text/html" /><updated>2023-09-09T22:52:40+00:00</updated><id>https://lukenelsn.github.io/jekyll-theme-yat/feed.xml</id><title type="html">Luke Nelson</title><subtitle>My portfolio of current and previous work</subtitle><author><name>LukeNelsn</name></author><entry><title type="html">My Experience</title><link href="https://lukenelsn.github.io/jekyll-theme-yat/personal/2023/09/04/my-experience.html" rel="alternate" type="text/html" title="My Experience" /><published>2023-09-04T00:00:00+00:00</published><updated>2023-09-04T00:00:00+00:00</updated><id>https://lukenelsn.github.io/jekyll-theme-yat/personal/2023/09/04/my-experience</id><content type="html" xml:base="https://lukenelsn.github.io/jekyll-theme-yat/personal/2023/09/04/my-experience.html"><![CDATA[<h3 id="experience">Experience</h3>
<hr />
<p>[**Bennett Thrasher | We’re hiring ↗**](https://www.btcpa.net/careers), Denver, Colorado \ Valuation Senior Analyst</p>

<ul>
  <li>Performing fair market value valuation analysis on a variety of private entities within various industries using accepted and relevant valuation approaches and theory utilizing discounted cash flow, market multiples, and option pricing models</li>
  <li>Collecting and reviewing client and market data pertinent to each engagement by performing economic, industry, market, and competitor research</li>
  <li>Iteratively improving and enhancing valuation models and tools to drive engagement efficiencies, minimize redundancies, and maximize accuracy</li>
</ul>

<blockquote>
  <p>The tax-reporting valuation practice of Intrinsic was acquired by [Bennett Thrasher in September 2023]</p>
</blockquote>

<p>[<strong>Intrinsic</strong>], Denver, Colorado \ Valuation Senior Associate</p>

<ul>
  <li>Performed fair market value valuation analysis on a variety of private entities within various industries using accepted and relevant valuation approaches and theory utilizing discounted cash flow, market multiples, and option pricing models</li>
  <li>Collected and reviewed client and market data pertinent to each engagement by performing economic, industry, market, and competitor research</li>
  <li>Iteratively improved and enhanced valuation models and tools to drive engagement efficiencies, minimize redundancies, and maximize accuracy</li>
</ul>

<p>[<strong>Quish</strong>], Boulder, Colorado \ Finance &amp; Accounting Intern</p>

<ul>
  <li>Analyzed wealth management and family office client performance on a monthly and quarterly basis</li>
  <li>Built client-facing portal system to provide each client with their unique repository of information</li>
  <li>Built client-facing fee statement system</li>
  <li>Corresponded with, and onboarded clients to the Charles Schwab advisor platform</li>
</ul>

<p>[<strong>Cuvée</strong>], Denver, Colorado \ Business Development Intern</p>

<ul>
  <li>Analyzed public and private data to research and identify profitable vacation destinations for company expansion; resulting in over $100 million of portfolio acquisitions</li>
  <li>Built a pro forma revenue model in which multiple reports are inputted, and summaries are calculated by quarter and year</li>
  <li>Analyzed and cross-sectioned sales data with pivot tables to identify growth opportunities</li>
  <li>Researched acquisition and partnership targets, performed preliminary due diligence, and built individualized pitch decks</li>
  <li>Repaired broken excel files, adding macros to streamline workflow processes, and documenting fixes</li>
  <li>Later engaged as an individual consultant to develop a property and location-specific pro forma revenue model to be used with prospective homeowners</li>
</ul>

<p><strong>Watercan</strong>, Denver, Colorado \ Co-Founder <em>(startup attempt)</em></p>

<p>Watercan strived to provide an environmentally-conscious solution to single-serving drinking water</p>
<ul>
  <li>Bootstrapped our initial production run of minimum viable products</li>
  <li>Collaborated with local businesses to organize our production and resources</li>
  <li>Utilized programs and resources from the University of Colorado to fund and advance our mission</li>
  <li>Tracked trends in the marketplace for signals of consumer sentiment</li>
  <li>Managed business documents, spreadsheets, and other media to ensure consistency and accuracy</li>
</ul>

<p><strong>N.M. Koch Company</strong>, Denver, Colorado \ Production Manager <em>(first job)</em></p>

<ul>
  <li>Planned, organized and executed operations, including ordering materials and supplies, workflow management and timely production</li>
  <li>Managed product quality to guarantee compliance with quality policies, procedures, and systems</li>
  <li>Overcame obstacles and variables to maintain production efficiency, meet deadlines and achieve high levels of profitability, allowing for the company to grow into larger locations and reach more customers</li>
</ul>

<h3 id="education">Education</h3>
<hr />
<p><strong>University of Colorado Boulder</strong> – Leeds School of Business</p>

<p>Bachelor of Science in Business Administration with an emphasis in [Finance] and [Information Management &amp; Analytics]</p>

<p>Cumulative GPA: 3.71/4.00</p>

<ul>
  <li><strong>Relevant Projects</strong>: Participant of [New Venture Challenge] in which I collaborated with peers and program mentors to develop and bring to market a new brand, product, and unique sales proposition. Our Product, Watercan, was an early-stage, pre-seed funding startup with the goal of delivering highly sustainable, canned water to consumers.</li>
  <li><strong>Relevant Courses</strong>: Derivative Securities, Investment and Portfolio Management, Principles &amp; Fundamentals of Financial Analysis, Business Data Management</li>
</ul>

<h3 id="leadership-and-activities">Leadership and Activities</h3>
<hr />
<p>[<strong>Alpha Kappa Psi - Gamma Zeta Chapter</strong>], Boulder, Colorado \ Member</p>

<ul>
  <li>Proactively engage with current members in a mentorship capacity, and provide early-career insights</li>
  <li>Live up to the core values of Brotherhood, Unity, Knowledge, Integrity, and Service</li>
  <li>Attend all chapter meetings and community service events</li>
</ul>

<p>[<strong>Leeds Investment and Trading Group</strong>], Boulder, Colorado \ Member</p>

<ul>
  <li>Generate stock and position recommendations by analyzing and discussing current market events, macroeconomic trends, and financial news</li>
  <li>Analyze market trends and patterns to expand financial literacy and study investment strategies</li>
</ul>

<h3 id="skills-and-additional-information">Skills and Additional Information</h3>
<hr />
<ul>
  <li>Advanced skills in Microsoft Word, PowerPoint, and Excel (dynamic modeling, pivot tables, complex formulas, macros, and Capital IQ formulas)</li>
  <li>Completion of [Training the Street] Valuation Essentials course</li>
  <li>Completion of [Financial Modeling &amp; Valuation Analyst] certification from Corporate Finance Institute</li>
  <li>Completion of [Bloomberg Market Concepts] certification</li>
  <li>Intermediate Python skills (data structures, dataframes, functions, file reading and writing, familiarity with pandas and NumPy)</li>
  <li>Intermediate SQL skills (advanced joins and analytics, in-line views, familiarity with Google BigQuery and DataRobot)</li>
  <li>Completion of [Alteryx Designer Core] certification</li>
  <li>Eagle Scout Rank achieved with two Eagle Palms, Bronze and Gold; June 2018 from Troop 780 Castle Rock</li>
  <li>Planned and lead Eagle Scout project to plant over 90 pine trees, contributing to the education of local elementary students</li>
  <li>Contributed over 300 hours of community service</li>
</ul>

<p>PDF version available ([here][PDF] ↗)</p>

<hr />
<p>Thank you for taking the time to check out my experience, all built in markdown.</p>

<p>If you’re interested in more, checkout my other projects on this site or visit my GitHub account ([here][github-account] ↗)</p>

<p>[**Bennett Thrasher | We’re hiring ↗**](https://www.btcpa.net/careers): https://www.btcpa.net/careers
[<strong>Intrinsic</strong>]: https://www.intrinsicfirm.com/
[Bennett Thrasher in September 2023]: https://www.btcpa.net/news/bennett-thrasher-continues-growth-with-acquisition-of-valuation-practice-in-denver
[<strong>Quish</strong>]: https://quishco.com
[<strong>Cuvée</strong>]: https://cuvee.com
[Finance]: https://www.colorado.edu/business/academic-programs/undergraduate-programs/finance
[Information Management &amp; Analytics]: https://www.colorado.edu/business/academic-programs/undergraduate-programs/management-entrepreneurship/information-analytics-track
[New Venture Challenge]: https://www.colorado.edu/nvc/
[<strong>Alpha Kappa Psi - Gamma Zeta Chapter</strong>]: http://www.akpsigz.com/
[<strong>Leeds Investment and Trading Group</strong>]: https://www.litgroupcu.com/
[Training the Street]: https://trainingthestreet.com/
[Financial Modeling &amp; Valuation Analyst]: https://corporatefinanceinstitute.com/certifications/financial-modeling-valuation-analyst-fmva-program/
[Bloomberg Market Concepts]: https://www.bloomberg.com/professional/product/bloomberg-market-concepts/
[Alteryx Designer Core]:https://community.alteryx.com/t5/Certification/bd-p/product-certification
[PDF]: https://lukenelsn.github.io/assets/Luke-Nelson-Resume.pdf
[github-account]: https://github.com/lukenelsn</p>]]></content><author><name>LukeNelsn</name></author><category term="personal" /><category term="welcome" /><category term="experience" /><category term="markdown" /><summary type="html"><![CDATA[Experience [Bennett Thrasher | We’re hiring ↗], Denver, Colorado \ Valuation Senior Analyst [**Bennett Thrasher We’re hiring ↗**]: https://www.btcpa.net/careers]]></summary></entry><entry><title type="html">Required Reading</title><link href="https://lukenelsn.github.io/jekyll-theme-yat/personal/2022/10/18/required-reading.html" rel="alternate" type="text/html" title="Required Reading" /><published>2022-10-18T00:00:00+00:00</published><updated>2022-10-18T00:00:00+00:00</updated><id>https://lukenelsn.github.io/jekyll-theme-yat/personal/2022/10/18/required-reading</id><content type="html" xml:base="https://lukenelsn.github.io/jekyll-theme-yat/personal/2022/10/18/required-reading.html"><![CDATA[<p>Below are some of my highly recommended reads, podcasts, and other media. This page will be continuously updated as I find new books or podcasts!</p>

<p>These are sorted in no particular order</p>

<h3 id="reading">Reading</h3>
<hr />
<h1 id="naval-ravikant">Naval Ravikant</h1>
<p><a href="https://www.navalmanack.com/"><strong>The Almanack of Naval Ravikant</strong></a>
A concise guide to building wealth, practicing happiness, and maintaining your health</p>

<h1 id="nassim-taleb">Nassim Taleb</h1>
<p><a href="https://en.wikipedia.org/wiki/Skin_in_the_Game_(book)"><strong>Skin in the Game</strong></a>
Formulate mental models when considering complex decisions</p>

<h1 id="yves-hilpisch">Yves Hilpisch</h1>
<p><a href="https://www.oreilly.com/library/view/python-for-finance/9781491945360/"><strong>Python for Finance</strong></a>
Refine your python data structure skills with real-world finance topics</p>

<h1 id="david-deutsch">David Deutsch</h1>
<p><a href="https://en.wikipedia.org/wiki/The_Beginning_of_Infinity"><strong>The Beginning of Infinity</strong></a>
A broad and concrete foundation of physics and other complex concepts</p>

<h1 id="michael-adas">Michael Adas</h1>
<p><a href="https://www.amazon.com/Turbulent-Passage-4th-Michael-Adas/dp/0205645712"><strong>Turbulent Passage, a Global History of the Twentieth Century</strong></a>
A focused dialogue of 20th century world history, without the typical North American focus</p>

<h3 id="podcasts">Podcasts</h3>
<hr />
<h1 id="chamath-palihapitiya-jason-calacanis-david-sacks--david-friedberg">Chamath Palihapitiya, Jason Calacanis, David Sacks &amp; David Friedberg</h1>
<p><a href="https://open.spotify.com/show/2IqXAVFR4e0Bmyjsdc8QzF"><strong>The All-In Podcast</strong></a>
An in-depth review of venture capital, macroeconomic events, and cutting edge bioscience</p>

<h1 id="jason-calacanis-and-molly-wood">Jason Calacanis and Molly Wood</h1>
<p><a href="https://open.spotify.com/show/6ULQ0ewYf5zmsDgBchlkr91"><strong>This Week in Startups</strong></a>
A daily update on startup trends, news on young and exciting companies, and analysis of industry factors that impact up-and-coming companies</p>

<h1 id="naval-ravikant-1">Naval Ravikant</h1>
<p><a href="https://open.spotify.com/show/7qZAVw03FuurfYnWIWwkHY"><strong>The Naval Podcast</strong></a>
A brief and thorough series on similar topics covered in Naval’s Almanack, and interviews with significant market participants</p>

<h1 id="stig-brodersen-trey-lockerbie-and-clay-finck">Stig Brodersen, Trey Lockerbie, and Clay Finck</h1>
<p><a href="https://open.spotify.com/episode/7Lt8MWVn2PhZXDx83xoCF1"><strong>We Study Billionaires</strong></a>
A series of analysis and curated interivews with big names in finance, investing, and economics</p>

<h1 id="stephen-dubner">Stephen Dubner</h1>
<p><a href="https://open.spotify.com/show/6z4NLXyHPga1UmSJsPK7G1"><strong>Freakonomics Radio</strong></a>
A weekly in-depth review of macroeconomic factors and trends impacting us all, along with thorough narratives from industry leaders</p>

<h1 id="lex-friedman">Lex Friedman</h1>
<p><a href="https://open.spotify.com/show/2MAi0BvDc6GTFvKFPXnkCL"><strong>The Lex Friedman Podcast</strong></a>
A series of intriguing and intellectually curious interviews on the topics of science, technology, and philosophy</p>

<hr />

<p>Thank you for taking the time to check out my favorite readings and podcasts, all built in markdown.</p>

<p>If you’re interested in more, checkout my other projects on this site or visit my GitHub account (<a href="https://github.com/lukenelsn">here</a> ↗)</p>]]></content><author><name>Luke</name></author><category term="personal" /><category term="welcome" /><category term="reading" /><category term="markdown" /><summary type="html"><![CDATA[Below are some of my highly recommended reads, podcasts, and other media. This page will be continuously updated as I find new books or podcasts!]]></summary></entry><entry><title type="html">College Resources</title><link href="https://lukenelsn.github.io/jekyll-theme-yat/personal/2022/07/17/college-resources.html" rel="alternate" type="text/html" title="College Resources" /><published>2022-07-17T00:00:00+00:00</published><updated>2022-07-17T00:00:00+00:00</updated><id>https://lukenelsn.github.io/jekyll-theme-yat/personal/2022/07/17/college-resources</id><content type="html" xml:base="https://lukenelsn.github.io/jekyll-theme-yat/personal/2022/07/17/college-resources.html"><![CDATA[<p>As I’ve reflected on my time in college, a few notbale moments come to mind. Here, I want to provide some of the most important and useful sheets I built to help navigate the large decisions in college. As well as, some of the organizational sheets I used to strucutre my semesters and stay on track.</p>

<p>Below is a discussion and some important points I want to share about early graudation, and the serious considerations that need to be taken into account when choosing to graduate early.</p>

<h2 id="useful-sheets">Useful Sheets</h2>
<hr />
<p><a href="https://lukenelsn.github.io/assets/Semester-Planning.xlsx"><strong>Semester Planning</strong></a> - Built to help with 3 and 4 year plans, along with class scheduling</p>

<p><a href="https://lukenelsn.github.io/assets/Internship-and-Job-Search.xlsx"><strong>Internship / Job Searching</strong></a> - Built to help track and prioritize all internship and job applications</p>

<p><a href="https://lukenelsn.github.io/assets/First-Year-Financial-Analysis.xlsx"><strong>Post-Grad Financial Planning</strong></a> - Built to help forecast your first-year earnings along with some simple budgeting</p>

<h2 id="early-graduation">Early Graduation</h2>
<hr />
<p>I’m writing this to give some guidance and direction to those in a similar situation as I, and to help shed some light on an alternative education path into the finance industry.</p>

<h3 id="undergrad">Undergrad</h3>

<p>I just finished by Bachelor’s of Science in Business Administration, emphasizing in Finance and Information Management in 2 years, 9 months, 1 day (to be exact).</p>

<p>Some cheat codes to your undergraduate education:</p>
<ul>
  <li>Take general education courses through a local community college over your summers. You can combine ~9 credits with a full-time job (yes, you’ll be busy) and graduate earlier. Transfer these into your 4-year institution, and double check with (1) <a href="https://transferology.com">Transferology</a> to ensure your community college credits transfer to your primary university, (2) your primary university academic advisor to ensure the credits will be accepted, and (3) your community college academic advisor to ensure the credits will transfer as expected.</li>
</ul>

<p>This saves you:</p>
<ul>
  <li>Time</li>
  <li>Money</li>
  <li>Effort (in my experience, community college courses are significantly easier than university courses)</li>
</ul>

<h3 id="internships">Internships</h3>
<p>Graduating in  less than 4 years while simultaneously trying to break into finance-related internships &amp; full-time roles is quite tricky in my experience. However, it’s not impossible.</p>

<p>A few notes…</p>
<ul>
  <li>Large firms don’t typically recognize the unique direction you’re taking and are hesitant to hire interns with presumably less academic experience. They aren’y always wrong in this assessment of early-graduating applicants. The mis-match in college credits, and your time spent within your university does not necessarily convert to internship-ready skills and qualifications.</li>
  <li>Between both my first and second internship, I’ve remained at local companies. I’d further attribute this to attending a large state school with a mildly reputable business program. Which both firms were familiar and comfortable with hiring from.</li>
</ul>

<h4 id="i-never-had-an-internship-between-my-first--second-year">I never had an internship between my first &amp; second year</h4>
<ul>
  <li>I interned at a local real estate firm from my second year fall semester through summer (7 months). Followed by a stint at a local private wealth management firm from my third year fall through summer (8 months).</li>
</ul>

<h4 id="benefits-of-interning-locally">Benefits of interning locally:</h4>
<ul>
  <li>You can end up with 14+ months of experience between two positions.</li>
  <li>Local firms have been extremely flexible with scheduling and remote work. They understand your priority is school and are often willing to let you choose your schedule.</li>
  <li>They have both paid above average hourly rates and especially understand that living as a college student isn’t very affordable (as most college towns are not).</li>
</ul>

<h4 id="downsides-of-interning-locally">Downsides of interning locally:</h4>
<ul>
  <li>Neither of these firms are household names, public companies, nor very large in employee headcount.</li>
  <li>I’ve had to explain each position and each firm’s line of business during nearly every interview, rather than selling myself and my skills.</li>
  <li>With smaller firm size comes a lack of structured intern to full-time programs. Neither firm is large enough to recruit (on a semester or annual basis) a full class or even a few interns, let alone offer them a full-time position after graduation.</li>
</ul>

<p>Even with those disadvantages, I’ve thoroughly enjoyed interning at local firms, and highly encourage it to anyone else who doesn’t want to take on the traditional finance route.</p>

<h3 id="interviewing">Interviewing</h3>

<p>When it comes to interviewing and discussing your early graduation, I found it most useful to provide brief and concise reasons for this decision. I never focused my interview or its discussion on my early graduation, rather focusing on the reasons why I was the best applicant for the position in question, and why I add more value to the organization than other candidates.</p>

<p>Below are a few tips for interviewing, no matter your experience or graduation timeline:</p>

<p><strong>1. Practice, practice, practice</strong>; you never want to interview for your “dream” position without prior interview practice. Get comfortable discussing your past experience, performance, and accomplishments. Practice and refine your answers to the most common interview questions, and prepare for any questions you anticipate will come up. For example, if you’re interviewing for an entry-level finance position, you are likely to discuss the markets, economic trends, and the time value of money / the discounted cash flow method, so prepare and practice your answer, and make sure to deliver your responses in a very natural tone.</p>

<p><strong>2. Research the employer</strong>; understand the line of business and fundamentals of the organization you’re applying to, and try to learn about their key customers or markets. This will become most apparent when the interviewer reaches the end of the interview, and will most likely ask you if “you have any questions for me / us?” At this moment, you can separate yourself from other applicants with clear, pointed, and smart questions about the organization. Additionally, these can be enhanced with details about the organization which you learned about on your own. Of course, if there are any position-related questions which come to mind during the interview, be sure to clear them at this time, or discuss any additional thoughts which came to mind.</p>

<p><strong>3. Dress appropriately</strong>; whether you’re interviewing in person or virtually, be sure to dress and prepare your appearance accordingly. If you’re interviewing virtually, place yourself in a quiet, well-lit room, where outside noise is minimized and you can appear as clearly as possible. Additionally, clean up your background and remove any distractions from your background, whether it’s on the wall, or in the foreground. If you’re interviewing in person, dress slightly above the job’s standard attire, for example, if the workplace typically dresses in business casual, dress for your interview in business professional. Additionally, make sure you arrive with printed resumes and bring a notebook and pen to take down any important notes. No matter which way you interview, arrive 5-10 minutes early, present yourself with confidence, and treat others with kindness.</p>

<p>In total, interviewing is a learned skill that improves with repetition and feedback. If you can, find a few friends to give you mock interviews, or apply to other “backup” jobs to practice interviewing before you go for your “dream” position.</p>

<hr />
<p>Thank you for taking the time to check out my college resources, all built in markdown.</p>

<p>If you’re interested in more, checkout my other projects on this site or visit my GitHub account (<a href="https://github.com/lukenelsn">here</a> ↗)</p>]]></content><author><name>LukeNelsn</name></author><category term="personal" /><category term="welcome" /><category term="college" /><category term="markdown" /><summary type="html"><![CDATA[As I’ve reflected on my time in college, a few notbale moments come to mind. Here, I want to provide some of the most important and useful sheets I built to help navigate the large decisions in college. As well as, some of the organizational sheets I used to strucutre my semesters and stay on track.]]></summary></entry><entry><title type="html">Wines of the World in Python</title><link href="https://lukenelsn.github.io/jekyll-theme-yat/projects/2022/07/04/wines-of-the-world.html" rel="alternate" type="text/html" title="Wines of the World in Python" /><published>2022-07-04T00:00:00+00:00</published><updated>2022-07-04T00:00:00+00:00</updated><id>https://lukenelsn.github.io/jekyll-theme-yat/projects/2022/07/04/wines-of-the-world</id><content type="html" xml:base="https://lukenelsn.github.io/jekyll-theme-yat/projects/2022/07/04/wines-of-the-world.html"><![CDATA[<p>Here, we will be analyzing the reviews of over 150,000 wine reviews originating from (<a href="http://www.winemag.com/?s=&amp;drink_type=wine">WineEnthisiast</a> ↗), and found on (<a href="https://www.kaggle.com/datasets/zynicide/wine-reviews">Kaggle</a> ↗). All reviews originate from each of the 6 populated continents, at least those where wine could be produced! Each wine was rated on a scale of 1-100 by 19 different reviewers, only those with a rating greater than 80 are included here.</p>

<p>The data is categorized by wine variety, location, winery, price, and description. However, we will only use the wine <strong>variety</strong> and its <strong>location</strong>.</p>

<p>I highly reccomend partitioning this within a Jupyter notebook, processing all the data as one combined python file would be more cumbersome than needed.</p>

<p>This analysis only requires the additional <code class="language-plaintext highlighter-rouge">winemag-data_first150k.csv</code> file to be stored in the same directory as your <code class="language-plaintext highlighter-rouge">winereviews.ipynb</code> file, unless you want to reference the aforementioned file another way.</p>

<blockquote>
  <p>Each of these files can also be downloaded from my GitHub account (<a href="https://github.com/LukeNelsn/winereviews">here</a> ↗)</p>
</blockquote>

<h2 id="wines-of-the-world">Wines of the World</h2>

<p>Required modules: <code class="language-plaintext highlighter-rouge">numpy</code> <code class="language-plaintext highlighter-rouge">pandas</code> <code class="language-plaintext highlighter-rouge">matplotlib</code> <code class="language-plaintext highlighter-rouge">pycountry_convert</code></p>

<p>pycountry_convert can be found (<a href="https://pypi.org/project/pycountry-convert/">here</a> ↗)</p>

<h4 id="preliminary-importing-and-organization">Preliminary importing and organization</h4>

<p>Let’s also import continent codes, country names, and establish a dictionary of continents</p>

<p>Related to our pandas dataframe, we will allow pandas to output all columns</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># import packages
</span><span class="kn">import</span> <span class="n">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="n">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="kn">from</span> <span class="n">matplotlib</span> <span class="kn">import</span> <span class="n">pyplot</span> <span class="k">as</span> <span class="n">plt</span>
<span class="kn">from</span> <span class="n">matplotlib</span> <span class="kn">import</span> <span class="n">figure</span> <span class="k">as</span> <span class="n">fig</span>
<span class="kn">import</span> <span class="n">pycountry_convert</span> <span class="k">as</span> <span class="n">pc</span>
<span class="kn">from</span> <span class="n">pycountry_convert</span> <span class="kn">import</span> <span class="n">country_alpha2_to_continent_code</span><span class="p">,</span> <span class="n">country_name_to_country_alpha2</span>

<span class="c1"># establish continents naming dictionary
</span><span class="n">continents</span> <span class="o">=</span> <span class="p">{</span>
    <span class="sh">'</span><span class="s">NA</span><span class="sh">'</span><span class="p">:</span> <span class="sh">'</span><span class="s">North America</span><span class="sh">'</span><span class="p">,</span>
    <span class="sh">'</span><span class="s">SA</span><span class="sh">'</span><span class="p">:</span> <span class="sh">'</span><span class="s">South America</span><span class="sh">'</span><span class="p">,</span> 
    <span class="sh">'</span><span class="s">AS</span><span class="sh">'</span><span class="p">:</span> <span class="sh">'</span><span class="s">Asia</span><span class="sh">'</span><span class="p">,</span>
    <span class="sh">'</span><span class="s">OC</span><span class="sh">'</span><span class="p">:</span> <span class="sh">'</span><span class="s">Australia</span><span class="sh">'</span><span class="p">,</span>
    <span class="sh">'</span><span class="s">AF</span><span class="sh">'</span><span class="p">:</span> <span class="sh">'</span><span class="s">Africa</span><span class="sh">'</span><span class="p">,</span>
    <span class="sh">'</span><span class="s">EU</span><span class="sh">'</span><span class="p">:</span> <span class="sh">'</span><span class="s">Europe</span><span class="sh">'</span>
<span class="p">}</span>

<span class="c1"># set pandas to show us all columns
</span><span class="n">pd</span><span class="p">.</span><span class="nf">set_option</span><span class="p">(</span><span class="sh">'</span><span class="s">display.max_columns</span><span class="sh">'</span><span class="p">,</span> <span class="bp">None</span><span class="p">)</span>
<span class="n">pd</span><span class="p">.</span><span class="nf">set_option</span><span class="p">(</span><span class="sh">"</span><span class="s">expand_frame_repr</span><span class="sh">"</span><span class="p">,</span> <span class="bp">False</span><span class="p">)</span>

<span class="c1"># importing the 150k CSV file
</span><span class="n">wine</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="nf">read_csv</span><span class="p">(</span><span class="sh">'</span><span class="s">winesfolder\winemag-data_first150k.csv</span><span class="sh">'</span><span class="p">)</span>
<span class="n">wine</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="nc">DataFrame</span><span class="p">(</span><span class="n">wine</span><span class="p">)</span>
<span class="n">wine</span><span class="p">.</span><span class="nf">head</span><span class="p">()</span>
</code></pre></div></div>
<p><em>Example output…</em></p>

<table>
  <thead>
    <tr>
      <th style="text-align: right">Unnamed: 0</th>
      <th style="text-align: right">country</th>
      <th style="text-align: right">description</th>
      <th style="text-align: right">designation</th>
      <th style="text-align: right">points</th>
      <th style="text-align: right">price</th>
      <th style="text-align: right">province</th>
      <th style="text-align: right">region_1</th>
      <th style="text-align: right">region_2</th>
      <th style="text-align: right">variety</th>
      <th style="text-align: right">winery</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: right">0</td>
      <td style="text-align: right">US</td>
      <td style="text-align: right">This tremendous 100% varietal wine hails from …</td>
      <td style="text-align: right">Martha’s Vineyard</td>
      <td style="text-align: right">96</td>
      <td style="text-align: right">235.0</td>
      <td style="text-align: right">California</td>
      <td style="text-align: right">Napa Valley</td>
      <td style="text-align: right">Napa</td>
      <td style="text-align: right">Cabernet Sauvignon</td>
      <td style="text-align: right">Heitz</td>
    </tr>
    <tr>
      <td style="text-align: right">1</td>
      <td style="text-align: right">Spain</td>
      <td style="text-align: right">Ripe aromas of fig, blackberry and cassis are …</td>
      <td style="text-align: right">Carodorum Selección Especial Reserva</td>
      <td style="text-align: right">96</td>
      <td style="text-align: right">110.0</td>
      <td style="text-align: right">Northern Spain</td>
      <td style="text-align: right">Toro</td>
      <td style="text-align: right">NaN</td>
      <td style="text-align: right">Tinta de Toro</td>
      <td style="text-align: right">Bodega Carmen Rodríguez</td>
    </tr>
  </tbody>
</table>

<h4 id="partition-the-data-by-continent">Partition the data by continent</h4>

<p>Here, we formalize each country name, remove null values, and segment the data by continent</p>

<blockquote>
  <p>Note: we are defaulting each wine from the region “US-France” to the country of France</p>
</blockquote>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># formalize each country name with lambda function --'Bosnia and Herzegovina':'Bosnia'
</span><span class="n">countryFixer</span> <span class="o">=</span> <span class="k">lambda</span> <span class="n">name</span><span class="p">:</span> <span class="p">{</span><span class="sh">'</span><span class="s">US</span><span class="sh">'</span><span class="p">:</span><span class="sh">'</span><span class="s">United States</span><span class="sh">'</span><span class="p">,</span> <span class="sh">'</span><span class="s">England</span><span class="sh">'</span><span class="p">:</span><span class="sh">'</span><span class="s">United Kingdom</span><span class="sh">'</span><span class="p">,</span><span class="sh">'</span><span class="s">US-France</span><span class="sh">'</span><span class="p">:</span><span class="sh">'</span><span class="s">France</span><span class="sh">'</span><span class="p">}.</span><span class="nf">get</span><span class="p">(</span><span class="n">name</span><span class="p">,</span><span class="n">name</span><span class="p">)</span>
<span class="n">wine</span><span class="p">[</span><span class="sh">'</span><span class="s">Country</span><span class="sh">'</span><span class="p">]</span> <span class="o">=</span> <span class="n">wine</span><span class="p">.</span><span class="n">country</span><span class="p">.</span><span class="nf">apply</span><span class="p">(</span><span class="n">countryFixer</span><span class="p">)</span>

<span class="c1"># remove nan values (5 found)
</span><span class="n">np</span><span class="p">.</span><span class="nf">where</span><span class="p">(</span><span class="n">pd</span><span class="p">.</span><span class="nf">isnull</span><span class="p">(</span><span class="n">wine</span><span class="p">.</span><span class="n">Country</span><span class="p">))</span>
<span class="n">noNan_wine</span> <span class="o">=</span> <span class="n">wine</span><span class="p">.</span><span class="nf">drop</span><span class="p">([</span><span class="n">wine</span><span class="p">.</span><span class="n">index</span><span class="p">[</span><span class="mi">1133</span><span class="p">],</span> <span class="n">wine</span><span class="p">.</span><span class="n">index</span><span class="p">[</span><span class="mi">1440</span><span class="p">],</span> <span class="n">wine</span><span class="p">.</span><span class="n">index</span><span class="p">[</span><span class="mi">68226</span><span class="p">],</span> <span class="n">wine</span><span class="p">.</span><span class="n">index</span><span class="p">[</span><span class="mi">113016</span><span class="p">],</span> <span class="n">wine</span><span class="p">.</span><span class="n">index</span><span class="p">[</span><span class="mi">135696</span><span class="p">]])</span>

<span class="c1"># create full list of each continent
</span><span class="n">continents_list</span> <span class="o">=</span> <span class="p">[]</span>
<span class="n">continents</span> <span class="o">=</span> <span class="p">{</span>
    <span class="sh">'</span><span class="s">NA</span><span class="sh">'</span><span class="p">:</span> <span class="sh">'</span><span class="s">North America</span><span class="sh">'</span><span class="p">,</span>
    <span class="sh">'</span><span class="s">SA</span><span class="sh">'</span><span class="p">:</span> <span class="sh">'</span><span class="s">South America</span><span class="sh">'</span><span class="p">,</span> 
    <span class="sh">'</span><span class="s">AS</span><span class="sh">'</span><span class="p">:</span> <span class="sh">'</span><span class="s">Asia</span><span class="sh">'</span><span class="p">,</span>
    <span class="sh">'</span><span class="s">OC</span><span class="sh">'</span><span class="p">:</span> <span class="sh">'</span><span class="s">Australia</span><span class="sh">'</span><span class="p">,</span>
    <span class="sh">'</span><span class="s">AF</span><span class="sh">'</span><span class="p">:</span> <span class="sh">'</span><span class="s">Africa</span><span class="sh">'</span><span class="p">,</span>
    <span class="sh">'</span><span class="s">EU</span><span class="sh">'</span><span class="p">:</span> <span class="sh">'</span><span class="s">Europe</span><span class="sh">'</span>
<span class="p">}</span>

<span class="k">for</span> <span class="n">country_name</span> <span class="ow">in</span> <span class="n">noNan_wine</span><span class="p">.</span><span class="n">Country</span><span class="p">:</span>
    <span class="n">country_alpha2</span> <span class="o">=</span> <span class="n">pc</span><span class="p">.</span><span class="nf">country_name_to_country_alpha2</span><span class="p">(</span><span class="n">country_name</span><span class="p">)</span>
    <span class="n">country_continent_code</span> <span class="o">=</span> <span class="n">pc</span><span class="p">.</span><span class="nf">country_alpha2_to_continent_code</span><span class="p">(</span><span class="n">country_alpha2</span><span class="p">)</span>
    <span class="n">country_continent_name</span> <span class="o">=</span> <span class="n">pc</span><span class="p">.</span><span class="nf">convert_continent_code_to_continent_name</span><span class="p">(</span><span class="n">country_continent_code</span><span class="p">)</span>
    <span class="n">continents_list</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="n">country_continent_name</span><span class="p">)</span>

<span class="c1"># add new column, assign it the values from the complete list of continents
</span><span class="n">noNan_wine</span><span class="p">[</span><span class="sh">'</span><span class="s">Continent</span><span class="sh">'</span><span class="p">]</span> <span class="o">=</span> <span class="n">continents_list</span>
<span class="n">noNan_wine</span><span class="p">.</span><span class="nf">head</span><span class="p">()</span>

<span class="c1"># separate all wines into new dataframes by continents
</span><span class="n">NA_wines</span> <span class="o">=</span> <span class="n">noNan_wine</span><span class="p">[</span><span class="n">noNan_wine</span><span class="p">.</span><span class="n">Continent</span><span class="o">==</span><span class="sh">'</span><span class="s">North America</span><span class="sh">'</span><span class="p">].</span><span class="nf">reset_index</span><span class="p">()</span>
<span class="n">EU_wines</span> <span class="o">=</span> <span class="n">noNan_wine</span><span class="p">[</span><span class="n">noNan_wine</span><span class="p">.</span><span class="n">Continent</span><span class="o">==</span><span class="sh">'</span><span class="s">Europe</span><span class="sh">'</span><span class="p">].</span><span class="nf">reset_index</span><span class="p">()</span>
<span class="n">OC_wines</span> <span class="o">=</span> <span class="n">noNan_wine</span><span class="p">[</span><span class="n">noNan_wine</span><span class="p">.</span><span class="n">Continent</span><span class="o">==</span><span class="sh">'</span><span class="s">Oceania</span><span class="sh">'</span><span class="p">].</span><span class="nf">reset_index</span><span class="p">()</span>
<span class="n">SA_wines</span> <span class="o">=</span> <span class="n">noNan_wine</span><span class="p">[</span><span class="n">noNan_wine</span><span class="p">.</span><span class="n">Continent</span><span class="o">==</span><span class="sh">'</span><span class="s">South America</span><span class="sh">'</span><span class="p">].</span><span class="nf">reset_index</span><span class="p">()</span>
<span class="n">AS_wines</span> <span class="o">=</span> <span class="n">noNan_wine</span><span class="p">[</span><span class="n">noNan_wine</span><span class="p">.</span><span class="n">Continent</span><span class="o">==</span><span class="sh">'</span><span class="s">Asia</span><span class="sh">'</span><span class="p">].</span><span class="nf">reset_index</span><span class="p">()</span>
<span class="n">AF_wines</span> <span class="o">=</span> <span class="n">noNan_wine</span><span class="p">[</span><span class="n">noNan_wine</span><span class="p">.</span><span class="n">Continent</span><span class="o">==</span><span class="sh">'</span><span class="s">Africa</span><span class="sh">'</span><span class="p">].</span><span class="nf">reset_index</span><span class="p">()</span>
</code></pre></div></div>

<h4 id="lets-see-how-many-reviews-originate-from-each-continent">Let’s see how many reviews originate from each continent</h4>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nf">print</span><span class="p">(</span><span class="sh">'</span><span class="s">NA:</span><span class="sh">'</span><span class="p">,</span><span class="nf">len</span><span class="p">(</span><span class="n">NA_wines</span><span class="p">))</span>
<span class="nf">print</span><span class="p">(</span><span class="sh">'</span><span class="s">EU:</span><span class="sh">'</span><span class="p">,</span><span class="nf">len</span><span class="p">(</span><span class="n">EU_wines</span><span class="p">))</span>
<span class="nf">print</span><span class="p">(</span><span class="sh">'</span><span class="s">OC:</span><span class="sh">'</span><span class="p">,</span><span class="nf">len</span><span class="p">(</span><span class="n">OC_wines</span><span class="p">))</span>
<span class="nf">print</span><span class="p">(</span><span class="sh">'</span><span class="s">SA:</span><span class="sh">'</span><span class="p">,</span><span class="nf">len</span><span class="p">(</span><span class="n">SA_wines</span><span class="p">))</span>
<span class="nf">print</span><span class="p">(</span><span class="sh">'</span><span class="s">AS:</span><span class="sh">'</span><span class="p">,</span><span class="nf">len</span><span class="p">(</span><span class="n">AS_wines</span><span class="p">))</span>
<span class="nf">print</span><span class="p">(</span><span class="sh">'</span><span class="s">AF:</span><span class="sh">'</span><span class="p">,</span><span class="nf">len</span><span class="p">(</span><span class="n">AF_wines</span><span class="p">))</span>
</code></pre></div></div>

<p><em>Example output…</em></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>NA: 62656
EU: 65343
OC: 8277
SA: 11564
AS: 810
AF: 2275
</code></pre></div></div>

<h4 id="calculating-average-wine-rating-by-continent">Calculating average wine rating by continent</h4>

<p>Here, we will calculate each continent’s average review points then plot the data in a neat bar chart</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># calculate each continent's average points
</span><span class="n">continent_avgs</span> <span class="o">=</span> <span class="p">(</span><span class="n">NA_wines</span><span class="p">.</span><span class="n">points</span><span class="p">.</span><span class="nf">mean</span><span class="p">(),</span> <span class="n">EU_wines</span><span class="p">.</span><span class="n">points</span><span class="p">.</span><span class="nf">mean</span><span class="p">(),</span> <span class="n">OC_wines</span><span class="p">.</span><span class="n">points</span><span class="p">.</span><span class="nf">mean</span><span class="p">(),</span> <span class="n">SA_wines</span><span class="p">.</span><span class="n">points</span><span class="p">.</span><span class="nf">mean</span><span class="p">(),</span> <span class="n">AS_wines</span><span class="p">.</span><span class="n">points</span><span class="p">.</span><span class="nf">mean</span><span class="p">(),</span> <span class="n">AF_wines</span><span class="p">.</span><span class="n">points</span><span class="p">.</span><span class="nf">mean</span><span class="p">())</span>

<span class="c1"># calculate the dataset's average out of curiosity
</span><span class="n">cumulative</span> <span class="o">=</span> <span class="n">NA_wines</span><span class="p">.</span><span class="n">points</span><span class="p">.</span><span class="nf">mean</span><span class="p">()</span><span class="o">+</span><span class="n">EU_wines</span><span class="p">.</span><span class="n">points</span><span class="p">.</span><span class="nf">mean</span><span class="p">()</span><span class="o">+</span><span class="n">OC_wines</span><span class="p">.</span><span class="n">points</span><span class="p">.</span><span class="nf">mean</span><span class="p">()</span><span class="o">+</span><span class="n">SA_wines</span><span class="p">.</span><span class="n">points</span><span class="p">.</span><span class="nf">mean</span><span class="p">()</span><span class="o">+</span><span class="n">AS_wines</span><span class="p">.</span><span class="n">points</span><span class="p">.</span><span class="nf">mean</span><span class="p">()</span><span class="o">+</span><span class="n">AF_wines</span><span class="p">.</span><span class="n">points</span><span class="p">.</span><span class="nf">mean</span><span class="p">()</span>
<span class="n">cumulative_avg</span> <span class="o">=</span> <span class="n">cumulative</span><span class="o">/</span><span class="mi">6</span>

<span class="c1"># begin plotting the data, neatly organized
</span><span class="n">error</span> <span class="o">=</span> <span class="n">noNan_wine</span><span class="p">.</span><span class="nf">groupby</span><span class="p">(</span><span class="sh">'</span><span class="s">Continent</span><span class="sh">'</span><span class="p">).</span><span class="n">points</span><span class="p">.</span><span class="nf">sem</span><span class="p">()</span>
<span class="n">ax</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="nf">subplot</span><span class="p">()</span>
<span class="n">plot</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="nf">bar</span><span class="p">(</span><span class="nf">range</span><span class="p">(</span><span class="nf">len</span><span class="p">(</span><span class="n">continent_avgs</span><span class="p">)),</span> <span class="n">continent_avgs</span><span class="p">,</span> <span class="n">yerr</span> <span class="o">=</span> <span class="n">error</span><span class="p">,</span> <span class="n">capsize</span> <span class="o">=</span> <span class="mi">5</span><span class="p">,</span> <span class="n">color</span><span class="o">=</span><span class="sh">'</span><span class="s">firebrick</span><span class="sh">'</span><span class="p">)</span>

<span class="c1"># let's give the bar chart some nice labels and visual cues
</span><span class="n">plt</span><span class="p">.</span><span class="nf">ylim</span><span class="p">(</span><span class="n">ymin</span><span class="o">=</span><span class="mi">85</span><span class="p">,</span> <span class="n">ymax</span><span class="o">=</span><span class="mi">89</span><span class="p">)</span>
<span class="n">ax</span><span class="p">.</span><span class="nf">set_ylabel</span><span class="p">(</span><span class="sh">'</span><span class="s">Average Wine Points</span><span class="sh">'</span><span class="p">)</span>
<span class="n">ax</span><span class="p">.</span><span class="nf">set_title</span><span class="p">(</span><span class="sh">'</span><span class="s">Average Wine Points by Continent</span><span class="sh">'</span><span class="p">)</span>
<span class="n">ax</span><span class="p">.</span><span class="nf">set_xticks</span><span class="p">(</span><span class="nf">range</span><span class="p">(</span><span class="nf">len</span><span class="p">(</span><span class="n">continent_avgs</span><span class="p">)))</span>
<span class="n">ax</span><span class="p">.</span><span class="nf">set_xticklabels</span><span class="p">(</span><span class="n">noNan_wine</span><span class="p">.</span><span class="n">Continent</span><span class="p">.</span><span class="nf">unique</span><span class="p">(),</span> <span class="n">rotation</span><span class="o">=</span><span class="mf">22.5</span><span class="p">)</span>
<span class="c1">#['North America', 'Europe', 'Oceania', 'South America', 'Asia', 'Africa'])
</span>
<span class="c1"># let's plot each continent's average above its respective bar chart
</span><span class="k">for</span> <span class="n">value</span> <span class="ow">in</span> <span class="n">plot</span><span class="p">:</span>
    <span class="n">height</span> <span class="o">=</span> <span class="n">value</span><span class="p">.</span><span class="nf">get_height</span><span class="p">()</span>
    <span class="n">plt</span><span class="p">.</span><span class="nf">text</span><span class="p">(</span><span class="n">value</span><span class="p">.</span><span class="nf">get_x</span><span class="p">()</span> <span class="o">+</span> <span class="n">value</span><span class="p">.</span><span class="nf">get_width</span><span class="p">()</span><span class="o">/</span><span class="mf">2.</span><span class="p">,</span>
             <span class="mf">1.002</span><span class="o">*</span><span class="n">height</span><span class="p">,</span><span class="sh">'</span><span class="s">%d</span><span class="sh">'</span> <span class="o">%</span> <span class="nf">int</span><span class="p">(</span><span class="n">height</span><span class="p">),</span> <span class="n">ha</span><span class="o">=</span><span class="sh">'</span><span class="s">center</span><span class="sh">'</span><span class="p">,</span> <span class="n">va</span><span class="o">=</span><span class="sh">'</span><span class="s">bottom</span><span class="sh">'</span><span class="p">)</span>

<span class="c1"># saving the chart as a .jpeg file, and displaying the output below this jupyer code cell
</span><span class="n">plt</span><span class="p">.</span><span class="nf">savefig</span><span class="p">(</span><span class="n">fname</span><span class="o">=</span><span class="sh">'</span><span class="s">contAverage.jpeg</span><span class="sh">'</span><span class="p">,</span> <span class="n">dpi</span><span class="o">=</span><span class="mi">300</span><span class="p">,</span> <span class="n">bbox_inches</span><span class="o">=</span><span class="sh">'</span><span class="s">tight</span><span class="sh">'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">show</span><span class="p">()</span>
</code></pre></div></div>
<p><em>Example output…</em></p>

<p><img src="https://raw.githubusercontent.com/LukeNelsn/winereviews/main/contAverage.jpeg" alt="contAverage" /></p>

<p>Unsuprisingly, Europe tends to receive high ratings for their wines. Let’s drill down furhter, and find out where the best are coming from!</p>

<h4 id="drill-down-europe">Drill down Europe</h4>

<p>We will loop over this many times as the user plays the game</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># biring in the Europe wines dataframe, and group the ratings by country
</span><span class="n">EU_wines</span>
<span class="n">EU_Country_wines</span> <span class="o">=</span> <span class="n">EU_wines</span><span class="p">.</span><span class="nf">groupby</span><span class="p">(</span><span class="sh">'</span><span class="s">Country</span><span class="sh">'</span><span class="p">).</span><span class="n">points</span><span class="p">.</span><span class="nf">mean</span><span class="p">().</span><span class="nf">reset_index</span><span class="p">()</span>

<span class="c1"># gather the top 5 (highly rated) countries, this can be changed as you see fit
</span><span class="n">EU_Country_wines_top5</span> <span class="o">=</span> <span class="n">EU_Country_wines</span><span class="p">[</span><span class="n">EU_Country_wines</span><span class="p">[</span><span class="sh">'</span><span class="s">points</span><span class="sh">'</span><span class="p">]</span> <span class="o">&gt;</span> <span class="mf">88.3</span><span class="p">]</span>

<span class="c1"># begin plotting the top 5 data
</span><span class="n">ax</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="nf">subplot</span><span class="p">()</span>
<span class="n">plot</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="nf">scatter</span><span class="p">(</span><span class="nf">range</span><span class="p">(</span><span class="nf">len</span><span class="p">(</span><span class="n">EU_Country_wines_top5</span><span class="p">)),</span><span class="n">EU_Country_wines_top5</span><span class="p">.</span><span class="n">points</span><span class="p">,</span> <span class="n">color</span><span class="o">=</span><span class="sh">'</span><span class="s">firebrick</span><span class="sh">'</span><span class="p">)</span>

<span class="c1"># let's give the chart some nice labels and visual cues
</span><span class="n">plt</span><span class="p">.</span><span class="nf">ylim</span><span class="p">(</span><span class="n">ymin</span><span class="o">=</span><span class="mi">80</span><span class="p">,</span> <span class="n">ymax</span><span class="o">=</span><span class="mi">100</span><span class="p">)</span>
<span class="n">ax</span><span class="p">.</span><span class="nf">set_ylabel</span><span class="p">(</span><span class="sh">'</span><span class="s">Average Wine Points</span><span class="sh">'</span><span class="p">)</span>
<span class="n">ax</span><span class="p">.</span><span class="nf">set_title</span><span class="p">(</span><span class="sh">'</span><span class="s">Average Wine Points by Country</span><span class="sh">'</span><span class="p">)</span>
<span class="n">ax</span><span class="p">.</span><span class="nf">set_xticks</span><span class="p">(</span><span class="nf">range</span><span class="p">(</span><span class="nf">len</span><span class="p">(</span><span class="n">EU_Country_wines_top5</span><span class="p">)))</span>
<span class="n">ax</span><span class="p">.</span><span class="nf">set_xticklabels</span><span class="p">(</span><span class="n">EU_Country_wines_top5</span><span class="p">.</span><span class="n">Country</span><span class="p">.</span><span class="nf">unique</span><span class="p">(),</span> <span class="n">rotation</span><span class="o">=</span><span class="mf">22.5</span><span class="p">)</span>

<span class="c1"># plotting each data point along the chart
</span><span class="n">y</span> <span class="o">=</span> <span class="nf">list</span><span class="p">(</span><span class="n">EU_Country_wines_top5</span><span class="p">.</span><span class="n">points</span><span class="p">)</span>
<span class="n">z</span> <span class="o">=</span> <span class="nf">range</span><span class="p">(</span><span class="nf">len</span><span class="p">(</span><span class="n">EU_Country_wines_top5</span><span class="p">))</span>
<span class="n">n</span> <span class="o">=</span> <span class="nf">list</span><span class="p">(</span><span class="n">EU_Country_wines_top5</span><span class="p">.</span><span class="n">points</span><span class="p">.</span><span class="nf">round</span><span class="p">(</span><span class="n">decimals</span><span class="o">=</span><span class="mi">2</span><span class="p">))</span>

<span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="n">txt</span> <span class="ow">in</span> <span class="nf">enumerate</span><span class="p">(</span><span class="n">n</span><span class="p">):</span>
    <span class="n">ax</span><span class="p">.</span><span class="nf">annotate</span><span class="p">(</span><span class="n">txt</span><span class="p">,</span> <span class="p">(</span><span class="n">z</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">-</span><span class="p">.</span><span class="mi">175</span><span class="p">,</span> <span class="n">y</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">+</span><span class="p">.</span><span class="mi">75</span><span class="p">))</span>

<span class="c1"># saving the chart as a .jpeg file, and displaying the output below this jupyer code cell
</span><span class="n">plt</span><span class="p">.</span><span class="nf">savefig</span><span class="p">(</span><span class="n">fname</span><span class="o">=</span><span class="sh">'</span><span class="s">countAverages.jpeg</span><span class="sh">'</span><span class="p">,</span> <span class="n">dpi</span><span class="o">=</span><span class="mi">300</span><span class="p">,</span> <span class="n">bbox_inches</span><span class="o">=</span><span class="sh">'</span><span class="s">tight</span><span class="sh">'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">show</span><span class="p">()</span>
</code></pre></div></div>
<p><em>Example output…</em></p>

<p><img src="https://raw.githubusercontent.com/LukeNelsn/winereviews/main/countAverages.jpeg" alt="countAverages" /></p>

<p>Wow, it looks like the United Kingdom takes the cake for producing the highest-rated wines! How many reviews originate from each of these top 5 countries?</p>

<h4 id="how-many-reviews-come-from-each-country">How many reviews come from each country?</h4>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># partition each country into its own dataframe
</span><span class="n">AUT_wines</span> <span class="o">=</span> <span class="n">noNan_wine</span><span class="p">[</span><span class="n">noNan_wine</span><span class="p">.</span><span class="n">Country</span> <span class="o">==</span> <span class="sh">'</span><span class="s">Austria</span><span class="sh">'</span><span class="p">]</span>
<span class="n">FRA_wines</span> <span class="o">=</span> <span class="n">noNan_wine</span><span class="p">[</span><span class="n">noNan_wine</span><span class="p">.</span><span class="n">Country</span> <span class="o">==</span> <span class="sh">'</span><span class="s">France</span><span class="sh">'</span><span class="p">]</span>
<span class="n">GER_wines</span> <span class="o">=</span> <span class="n">noNan_wine</span><span class="p">[</span><span class="n">noNan_wine</span><span class="p">.</span><span class="n">Country</span> <span class="o">==</span> <span class="sh">'</span><span class="s">Germany</span><span class="sh">'</span><span class="p">]</span>
<span class="n">ITY_wines</span> <span class="o">=</span> <span class="n">noNan_wine</span><span class="p">[</span><span class="n">noNan_wine</span><span class="p">.</span><span class="n">Country</span> <span class="o">==</span> <span class="sh">'</span><span class="s">Italy</span><span class="sh">'</span><span class="p">]</span>
<span class="n">UK_wines</span> <span class="o">=</span> <span class="n">noNan_wine</span><span class="p">[</span><span class="n">noNan_wine</span><span class="p">.</span><span class="n">Country</span> <span class="o">==</span> <span class="sh">'</span><span class="s">United Kingdom</span><span class="sh">'</span><span class="p">]</span>

<span class="c1"># print the number of reviews from each country
</span><span class="nf">print</span><span class="p">(</span><span class="nf">len</span><span class="p">(</span><span class="n">AUT_wines</span><span class="p">),</span><span class="nf">len</span><span class="p">(</span><span class="n">FRA_wines</span><span class="p">),</span><span class="nf">len</span><span class="p">(</span><span class="n">GER_wines</span><span class="p">),</span><span class="nf">len</span><span class="p">(</span><span class="n">ITY_wines</span><span class="p">),</span><span class="nf">len</span><span class="p">(</span><span class="n">UK_wines</span><span class="p">))</span>
</code></pre></div></div>

<p><em>Example output…</em></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>3057 21099 2452 23478 9
</code></pre></div></div>

<p>Looks like the United Kingdom only represents <strong>9</strong> reviews out of 150,000+ total reviews. This fails to provide a significant basis to determine which nation produces the best wines.</p>

<h2 id="conclusion">Conclusion</h2>

<p>In total, great wines originate from around the world, and your tastes will ultimately guide your purchasing decisions. However, based on the reviews and data compiled here, it appears you won’t go wrong purchasing wine from Europe, and more specifically, Austria!</p>

<p>Thank you for taking the time to check out this wine review analysis, all built in python, and best organized in a Jupyter notebook.</p>

<p>If you’re interested in more, checkout my other projects on this site or visit my GitHub account (<a href="https://github.com/LukeNelsn/">here</a> ↗)</p>]]></content><author><name>Luke</name></author><category term="projects" /><category term="projects" /><category term="python" /><category term="jupyter" /><category term="wine" /><summary type="html"><![CDATA[Here, we will be analyzing the reviews of over 150,000 wine reviews originating from (WineEnthisiast ↗), and found on (Kaggle ↗). All reviews originate from each of the 6 populated continents, at least those where wine could be produced! Each wine was rated on a scale of 1-100 by 19 different reviewers, only those with a rating greater than 80 are included here.]]></summary></entry><entry><title type="html">Impactful Quotes and Remarks</title><link href="https://lukenelsn.github.io/jekyll-theme-yat/personal/2022/07/01/Impactful-Quotes-and-Remarks.html" rel="alternate" type="text/html" title="Impactful Quotes and Remarks" /><published>2022-07-01T00:00:00+00:00</published><updated>2022-07-01T00:00:00+00:00</updated><id>https://lukenelsn.github.io/jekyll-theme-yat/personal/2022/07/01/Impactful-Quotes-and-Remarks</id><content type="html" xml:base="https://lukenelsn.github.io/jekyll-theme-yat/personal/2022/07/01/Impactful-Quotes-and-Remarks.html"><![CDATA[<p>Throughout my time at the Unversity of Colorado, and in my extra-curricular involvements, I have had the pleasure of learning and taking away valuable lessons from professors and professional mentors. I’ve attempted to categorize and recall the most impactful lessons, and here, I will try to develop a repository of these moments. Hopefully, more are yet to come, and this list will continue to grow.</p>

<h3 id="professional-mentors">Professional Mentors</h3>
<hr />
<h1 id="venture-capitalist-coworker--mentor">Venture Capitalist Coworker &amp; Mentor</h1>
<blockquote>
  <p>A healthy curiosity and ability to quickly acquire knowledge will enable you to operate very well and productively in any kind of entrepreneurial venture</p>
</blockquote>

<h1 id="young-adult-mentor">Young Adult Mentor</h1>
<blockquote>
  <p>Leave a lasting impact, something positive, which you can both look back on, and refer back to fondly</p>
</blockquote>

<h1 id="young-adult-mentor-1">Young Adult Mentor</h1>
<blockquote>
  <p>If it’s meant to be, it’s up to me. Take responsibility and own your decisions as a means to realize your potential</p>
</blockquote>

<h3 id="academic-professors">Academic Professors</h3>
<hr />
<h1 id="finance-capstone-professor">Finance Capstone Professor</h1>
<blockquote>
  <p>Never stop learning, life does not consist of linear, perfect decisions. There are twists and bends, so prepare yourself</p>
</blockquote>

<h1 id="information-management-capstone-professor">Information Management Capstone Professor</h1>
<blockquote>
  <p>Always strive towards and find your happiness, maintain relationships, unethical decisions or business decisions will not lead to a fulfilling life</p>
</blockquote>

<h1 id="financial-derivatives-professor">Financial Derivatives Professor</h1>
<blockquote>
  <p>Never lose sight of what’s truly important. Find your “why” and your “purpose”. These may take a while to determine but will assist/guide major decisions. No one will care about your academic performance in a matter of years, true meaning, value, and authenticity are what truly matter</p>
</blockquote>

<p>As mentioned above, I hope to continuously add to this list. I’ve found that many of these points are useful to refer back to, and provide guiding principles when facing uncertainty.</p>

<hr />
<p>Thank you for taking the time to check out this post, all built in markdown.</p>

<p>If you’re interested in more, checkout my other projects on this site or visit my GitHub account (<a href="https://github.com/lukenelsn">here</a> ↗)</p>]]></content><author><name>LukeNelsn</name></author><category term="personal" /><category term="personal" /><category term="markdown" /><summary type="html"><![CDATA[Throughout my time at the Unversity of Colorado, and in my extra-curricular involvements, I have had the pleasure of learning and taking away valuable lessons from professors and professional mentors. I’ve attempted to categorize and recall the most impactful lessons, and here, I will try to develop a repository of these moments. Hopefully, more are yet to come, and this list will continue to grow.]]></summary></entry><entry><title type="html">Flags of the World Quiz in Python</title><link href="https://lukenelsn.github.io/jekyll-theme-yat/projects/2022/06/19/flag-quiz-in-python.html" rel="alternate" type="text/html" title="Flags of the World Quiz in Python" /><published>2022-06-19T00:00:00+00:00</published><updated>2022-06-19T00:00:00+00:00</updated><id>https://lukenelsn.github.io/jekyll-theme-yat/projects/2022/06/19/flag-quiz-in-python</id><content type="html" xml:base="https://lukenelsn.github.io/jekyll-theme-yat/projects/2022/06/19/flag-quiz-in-python.html"><![CDATA[<p>This simple and fun game can be played from your own terminal, all with some simple python scripts.</p>

<p>The game is both rudimentary and simplistic, yet matches the design and style of this online flag quiz (<a href="https://world-geography-games.com/en/flags_world.html">here</a> ↗). Feel free to modiify and change the game as you see fit!</p>

<p>This game runs perfectly just as a python file, but even better when separated and ran in a Jupyter notebook. This quiz only requires the additional <code class="language-plaintext highlighter-rouge">png1000px</code> and <code class="language-plaintext highlighter-rouge">countries.json</code> files to be stored in the same directory as your <code class="language-plaintext highlighter-rouge">FlagQuiz.py</code> or <code class="language-plaintext highlighter-rouge">FlagQuizJupyter.ipynb</code> file, unless you want to reference the aforementioned files another way.</p>

<p>The <code class="language-plaintext highlighter-rouge">png1000px</code> and <code class="language-plaintext highlighter-rouge">countries.json</code> files can be downloaded from hampusborgos’s GitHub page (<a href="https://github.com/hampusborgos/country-flags">here</a> ↗)</p>

<blockquote>
  <p>Each of these files can also be downloaded from my GitHub account (<a href="https://github.com/LukeNelsn/pyflagquiz">here</a> ↗)</p>
</blockquote>

<h2 id="flags-of-the-world-quiz-in-python">Flags of the World Quiz in Python</h2>

<p>Required modules: <code class="language-plaintext highlighter-rouge">random</code> <code class="language-plaintext highlighter-rouge">json</code> <code class="language-plaintext highlighter-rouge">PIL</code> <code class="language-plaintext highlighter-rouge">glob</code> <code class="language-plaintext highlighter-rouge">matplotlib</code></p>

<h4 id="preliminary-importing-and-organization-of-our-figure-size">Preliminary importing and organization of our figure size</h4>

<p>Let’s also import all country names, establish a class of colors, some score keeping metrics, and create a clean list of each country flag</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="n">random</span> 
<span class="kn">import</span> <span class="n">json</span>
<span class="kn">from</span> <span class="n">PIL</span> <span class="kn">import</span> <span class="n">Image</span>
<span class="kn">import</span> <span class="n">glob</span>
<span class="kn">import</span> <span class="n">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>
<span class="kn">from</span> <span class="n">matplotlib.pyplot</span> <span class="kn">import</span> <span class="n">figure</span>
<span class="kn">import</span> <span class="n">matplotlib.image</span> <span class="k">as</span> <span class="n">mpimg</span>
<span class="nf">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">),</span> <span class="n">dpi</span><span class="o">=</span><span class="mi">300</span><span class="p">)</span>
<span class="n">countriesDICT</span> <span class="o">=</span> <span class="n">json</span><span class="p">.</span><span class="nf">load</span><span class="p">(</span><span class="nf">open</span><span class="p">(</span><span class="sh">'</span><span class="s">countries.json</span><span class="sh">'</span><span class="p">))</span>
<span class="k">class</span> <span class="nc">color</span><span class="p">:</span>
   <span class="n">PURPLE</span> <span class="o">=</span> <span class="sh">'</span><span class="se">\033</span><span class="s">[95m</span><span class="sh">'</span>
   <span class="n">CYAN</span> <span class="o">=</span> <span class="sh">'</span><span class="se">\033</span><span class="s">[96m</span><span class="sh">'</span>
   <span class="n">DARKCYAN</span> <span class="o">=</span> <span class="sh">'</span><span class="se">\033</span><span class="s">[36m</span><span class="sh">'</span>
   <span class="n">BLUE</span> <span class="o">=</span> <span class="sh">'</span><span class="se">\033</span><span class="s">[94m</span><span class="sh">'</span>
   <span class="n">GREEN</span> <span class="o">=</span> <span class="sh">'</span><span class="se">\033</span><span class="s">[92m</span><span class="sh">'</span>
   <span class="n">YELLOW</span> <span class="o">=</span> <span class="sh">'</span><span class="se">\033</span><span class="s">[93m</span><span class="sh">'</span>
   <span class="n">RED</span> <span class="o">=</span> <span class="sh">'</span><span class="se">\033</span><span class="s">[91m</span><span class="sh">'</span>
   <span class="n">BOLD</span> <span class="o">=</span> <span class="sh">'</span><span class="se">\033</span><span class="s">[1m</span><span class="sh">'</span>
   <span class="n">UNDERLINE</span> <span class="o">=</span> <span class="sh">'</span><span class="se">\033</span><span class="s">[4m</span><span class="sh">'</span>
   <span class="n">END</span> <span class="o">=</span> <span class="sh">'</span><span class="se">\033</span><span class="s">[0m</span><span class="sh">'</span>
<span class="n">score</span> <span class="o">=</span> <span class="mi">0</span>
<span class="n">count</span> <span class="o">=</span> <span class="mi">0</span> 
<span class="n">image_list</span> <span class="o">=</span> <span class="p">[]</span> 
<span class="k">for</span> <span class="n">image</span> <span class="ow">in</span> <span class="n">glob</span><span class="p">.</span><span class="nf">glob</span><span class="p">(</span><span class="sh">'</span><span class="s">png1000px/*.png</span><span class="sh">'</span><span class="p">):</span>
    <span class="n">i</span> <span class="o">=</span> <span class="n">Image</span><span class="p">.</span><span class="nf">open</span><span class="p">(</span><span class="n">image</span><span class="p">)</span>
    <span class="n">image_list</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="n">i</span><span class="p">)</span> 
<span class="nf">print</span><span class="p">(</span><span class="n">color</span><span class="p">.</span><span class="n">BOLD</span> <span class="o">+</span> <span class="n">color</span><span class="p">.</span><span class="n">DARKCYAN</span> <span class="o">+</span> <span class="sh">'</span><span class="se">\n</span><span class="s">FLAG QUIZ</span><span class="se">\n</span><span class="sh">'</span> <span class="o">+</span> <span class="n">color</span><span class="p">.</span><span class="n">END</span><span class="p">)</span>
</code></pre></div></div>

<h4 id="define-the-flag-quiz-itself">Define the Flag Quiz itself</h4>

<p>We will loop over this many times as the user plays the game</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">flagQuiz</span><span class="p">():</span>
    <span class="k">global</span> <span class="n">score</span><span class="p">,</span> <span class="n">count</span>
    <span class="n">uniqueCountries</span> <span class="o">=</span> <span class="n">random</span><span class="p">.</span><span class="nf">sample</span><span class="p">(</span><span class="nf">list</span><span class="p">(</span><span class="n">countriesDICT</span><span class="p">.</span><span class="nf">items</span><span class="p">()),</span><span class="mi">4</span><span class="p">)</span>
    <span class="n">randList</span> <span class="o">=</span> <span class="n">random</span><span class="p">.</span><span class="nf">sample</span><span class="p">([</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">],</span> <span class="mi">4</span><span class="p">)</span>
    <span class="nf">print</span><span class="p">(</span><span class="sh">'</span><span class="s">1.</span><span class="sh">'</span><span class="p">,</span><span class="n">uniqueCountries</span><span class="p">[</span><span class="n">randList</span><span class="p">[</span><span class="mi">0</span><span class="p">]][</span><span class="mi">1</span><span class="p">],</span><span class="sh">'</span><span class="se">\n</span><span class="sh">'</span>
            <span class="sh">'</span><span class="s">2.</span><span class="sh">'</span><span class="p">,</span><span class="n">uniqueCountries</span><span class="p">[</span><span class="n">randList</span><span class="p">[</span><span class="mi">1</span><span class="p">]][</span><span class="mi">1</span><span class="p">],</span><span class="sh">'</span><span class="se">\n</span><span class="sh">'</span>
            <span class="sh">'</span><span class="s">3.</span><span class="sh">'</span><span class="p">,</span><span class="n">uniqueCountries</span><span class="p">[</span><span class="n">randList</span><span class="p">[</span><span class="mi">2</span><span class="p">]][</span><span class="mi">1</span><span class="p">],</span><span class="sh">'</span><span class="se">\n</span><span class="sh">'</span>
            <span class="sh">'</span><span class="s">4.</span><span class="sh">'</span><span class="p">,</span><span class="n">uniqueCountries</span><span class="p">[</span><span class="n">randList</span><span class="p">[</span><span class="mi">3</span><span class="p">]][</span><span class="mi">1</span><span class="p">],</span><span class="sh">'</span><span class="se">\n</span><span class="sh">'</span><span class="p">)</span>
    <span class="n">optionsDict</span> <span class="o">=</span> <span class="p">{</span><span class="mi">1</span><span class="p">:</span><span class="n">uniqueCountries</span><span class="p">[</span><span class="n">randList</span><span class="p">[</span><span class="mi">0</span><span class="p">]][</span><span class="mi">1</span><span class="p">],</span><span class="mi">2</span><span class="p">:</span><span class="n">uniqueCountries</span><span class="p">[</span><span class="n">randList</span><span class="p">[</span><span class="mi">1</span><span class="p">]][</span><span class="mi">1</span><span class="p">],</span><span class="mi">3</span><span class="p">:</span><span class="n">uniqueCountries</span><span class="p">[</span><span class="n">randList</span><span class="p">[</span><span class="mi">2</span><span class="p">]][</span><span class="mi">1</span><span class="p">],</span><span class="mi">4</span><span class="p">:</span><span class="n">uniqueCountries</span><span class="p">[</span><span class="n">randList</span><span class="p">[</span><span class="mi">3</span><span class="p">]][</span><span class="mi">1</span><span class="p">]}</span>
    <span class="n">imgplot</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="nf">imshow</span><span class="p">(</span><span class="n">mpimg</span><span class="p">.</span><span class="nf">imread</span><span class="p">(</span><span class="sh">'</span><span class="s">png1000px/</span><span class="sh">'</span><span class="o">+</span><span class="nf">str</span><span class="p">(</span><span class="n">uniqueCountries</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">0</span><span class="p">].</span><span class="nf">lower</span><span class="p">())</span><span class="o">+</span><span class="sh">'</span><span class="s">.png</span><span class="sh">'</span><span class="p">))</span>    
    <span class="n">plt</span><span class="p">.</span><span class="nf">axis</span><span class="p">(</span><span class="sh">'</span><span class="s">off</span><span class="sh">'</span><span class="p">)</span>
    <span class="n">plt</span><span class="p">.</span><span class="nf">show</span><span class="p">()</span>
    <span class="k">while</span> <span class="bp">True</span><span class="p">:</span>
        <span class="k">try</span><span class="p">:</span>
            <span class="n">playerGuess</span> <span class="o">=</span> <span class="nf">input</span><span class="p">(</span><span class="sh">'</span><span class="s">Guess (enter </span><span class="sh">"</span><span class="s">n</span><span class="sh">"</span><span class="s"> to exit): </span><span class="sh">'</span><span class="p">)</span>
            <span class="k">if</span> <span class="n">playerGuess</span> <span class="o">==</span> <span class="sh">'</span><span class="s">n</span><span class="sh">'</span><span class="p">:</span>
                <span class="nf">print</span><span class="p">(</span><span class="sh">'</span><span class="se">\n</span><span class="sh">'</span> <span class="o">+</span> <span class="n">color</span><span class="p">.</span><span class="n">BOLD</span> <span class="o">+</span> <span class="n">color</span><span class="p">.</span><span class="n">BLUE</span> <span class="o">+</span> <span class="sh">'</span><span class="s">Final Score: </span><span class="sh">'</span> <span class="o">+</span> <span class="nf">str</span><span class="p">(</span><span class="n">score</span><span class="p">)</span> <span class="o">+</span> <span class="sh">'</span><span class="s">/</span><span class="sh">'</span> <span class="o">+</span> <span class="nf">str</span><span class="p">(</span><span class="n">count</span><span class="p">)</span> <span class="o">+</span> <span class="n">color</span><span class="p">.</span><span class="n">END</span><span class="p">)</span>
                <span class="nf">exit</span><span class="p">()</span>
            <span class="k">elif</span> <span class="nf">int</span><span class="p">(</span><span class="n">playerGuess</span><span class="p">)</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">:</span>
                <span class="k">raise</span> <span class="nb">ValueError</span>
            <span class="k">elif</span> <span class="nf">int</span><span class="p">(</span><span class="n">playerGuess</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mi">4</span><span class="p">:</span>
                <span class="k">raise</span> <span class="nb">ValueError</span>
            <span class="n">count</span> <span class="o">+=</span> <span class="mi">1</span>
            <span class="k">break</span>
        <span class="k">except</span> <span class="nb">ValueError</span><span class="p">:</span>
            <span class="nf">print</span><span class="p">(</span><span class="n">color</span><span class="p">.</span><span class="n">YELLOW</span> <span class="o">+</span> <span class="sh">'</span><span class="s">Guess must be between 1 &amp; 4</span><span class="sh">'</span> <span class="o">+</span> <span class="n">color</span><span class="p">.</span><span class="n">END</span><span class="p">)</span>
    <span class="k">if</span> <span class="n">optionsDict</span><span class="p">[</span><span class="nf">int</span><span class="p">(</span><span class="n">playerGuess</span><span class="p">)]</span> <span class="o">==</span> <span class="n">uniqueCountries</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">1</span><span class="p">]:</span>
        <span class="n">score</span> <span class="o">+=</span> <span class="mi">1</span>     
        <span class="nf">print</span><span class="p">(</span><span class="n">color</span><span class="p">.</span><span class="n">GREEN</span> <span class="o">+</span> <span class="n">color</span><span class="p">.</span><span class="n">BOLD</span> <span class="o">+</span> <span class="sh">'</span><span class="se">\n</span><span class="sh">'</span> <span class="o">+</span> <span class="n">uniqueCountries</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span> <span class="o">+</span> <span class="n">color</span><span class="p">.</span><span class="n">END</span><span class="p">,</span> <span class="sh">'</span><span class="se">\n</span><span class="sh">'</span> <span class="o">+</span> 
        <span class="n">color</span><span class="p">.</span><span class="n">BLUE</span> <span class="o">+</span> <span class="sh">'</span><span class="s">Score: </span><span class="sh">'</span> <span class="o">+</span> <span class="nf">str</span><span class="p">(</span><span class="n">score</span><span class="p">)</span> <span class="o">+</span> <span class="sh">'</span><span class="s">/</span><span class="sh">'</span> <span class="o">+</span> <span class="nf">str</span><span class="p">(</span><span class="n">count</span><span class="p">)</span> <span class="o">+</span> <span class="n">color</span><span class="p">.</span><span class="n">END</span><span class="p">)</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="nf">print</span><span class="p">(</span><span class="n">color</span><span class="p">.</span><span class="n">RED</span> <span class="o">+</span> <span class="n">color</span><span class="p">.</span><span class="n">BOLD</span> <span class="o">+</span> <span class="sh">'</span><span class="se">\n</span><span class="sh">'</span> <span class="o">+</span> <span class="n">optionsDict</span><span class="p">[</span><span class="nf">int</span><span class="p">(</span><span class="n">playerGuess</span><span class="p">)]</span> <span class="o">+</span> <span class="n">color</span><span class="p">.</span><span class="n">END</span><span class="p">,</span> <span class="sh">'</span><span class="se">\n</span><span class="sh">'</span> <span class="o">+</span>
        <span class="n">color</span><span class="p">.</span><span class="n">GREEN</span> <span class="o">+</span> <span class="n">color</span><span class="p">.</span><span class="n">BOLD</span> <span class="o">+</span> <span class="n">uniqueCountries</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span> <span class="o">+</span> <span class="n">color</span><span class="p">.</span><span class="n">END</span><span class="p">,</span> <span class="sh">'</span><span class="se">\n</span><span class="sh">'</span> <span class="o">+</span> 
        <span class="n">color</span><span class="p">.</span><span class="n">BLUE</span> <span class="o">+</span> <span class="sh">'</span><span class="s">Score: </span><span class="sh">'</span> <span class="o">+</span> <span class="nf">str</span><span class="p">(</span><span class="n">score</span><span class="p">)</span> <span class="o">+</span> <span class="sh">'</span><span class="s">/</span><span class="sh">'</span> <span class="o">+</span> <span class="nf">str</span><span class="p">(</span><span class="n">count</span><span class="p">)</span> <span class="o">+</span> <span class="n">color</span><span class="p">.</span><span class="n">END</span><span class="p">)</span>
    <span class="nf">flagQuiz</span><span class="p">()</span>        
<span class="nf">flagQuiz</span><span class="p">()</span>
</code></pre></div></div>

<h2 id="flags-of-the-world-quiz-in-python-jupyter-notebook">Flags of the World Quiz in Python (Jupyter Notebook)</h2>

<p>Required modules: <code class="language-plaintext highlighter-rouge">random</code> <code class="language-plaintext highlighter-rouge">json</code> <code class="language-plaintext highlighter-rouge">PIL</code> <code class="language-plaintext highlighter-rouge">glob</code> <code class="language-plaintext highlighter-rouge">matplotlib</code>
Additionally required modules for Jupyter version: <code class="language-plaintext highlighter-rouge">IPython</code> <code class="language-plaintext highlighter-rouge">time</code></p>

<h4 id="preliminary-importing-and-organization-of-our-figure-size-1">Preliminary importing and organization of our figure size</h4>

<p>Let’s also import all country names, establish a class of colors, some score keeping metrics, and create a clean list of each country flag</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="n">random</span> 
<span class="kn">import</span> <span class="n">json</span>
<span class="kn">from</span> <span class="n">PIL</span> <span class="kn">import</span> <span class="n">Image</span>
<span class="kn">import</span> <span class="n">glob</span>
<span class="kn">import</span> <span class="n">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>
<span class="kn">from</span> <span class="n">matplotlib.pyplot</span> <span class="kn">import</span> <span class="n">figure</span>
<span class="kn">import</span> <span class="n">matplotlib.image</span> <span class="k">as</span> <span class="n">mpimg</span>
<span class="kn">from</span> <span class="n">IPython.display</span> <span class="kn">import</span> <span class="n">clear_output</span>
<span class="kn">import</span> <span class="n">time</span>
<span class="nf">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">),</span> <span class="n">dpi</span><span class="o">=</span><span class="mi">300</span><span class="p">)</span>
<span class="n">countriesDICT</span> <span class="o">=</span> <span class="n">json</span><span class="p">.</span><span class="nf">load</span><span class="p">(</span><span class="nf">open</span><span class="p">(</span><span class="sh">'</span><span class="s">countries.json</span><span class="sh">'</span><span class="p">))</span>
<span class="k">class</span> <span class="nc">color</span><span class="p">:</span>
   <span class="n">PURPLE</span> <span class="o">=</span> <span class="sh">'</span><span class="se">\033</span><span class="s">[95m</span><span class="sh">'</span>
   <span class="n">CYAN</span> <span class="o">=</span> <span class="sh">'</span><span class="se">\033</span><span class="s">[96m</span><span class="sh">'</span>
   <span class="n">DARKCYAN</span> <span class="o">=</span> <span class="sh">'</span><span class="se">\033</span><span class="s">[36m</span><span class="sh">'</span>
   <span class="n">BLUE</span> <span class="o">=</span> <span class="sh">'</span><span class="se">\033</span><span class="s">[94m</span><span class="sh">'</span>
   <span class="n">GREEN</span> <span class="o">=</span> <span class="sh">'</span><span class="se">\033</span><span class="s">[92m</span><span class="sh">'</span>
   <span class="n">YELLOW</span> <span class="o">=</span> <span class="sh">'</span><span class="se">\033</span><span class="s">[93m</span><span class="sh">'</span>
   <span class="n">RED</span> <span class="o">=</span> <span class="sh">'</span><span class="se">\033</span><span class="s">[91m</span><span class="sh">'</span>
   <span class="n">BOLD</span> <span class="o">=</span> <span class="sh">'</span><span class="se">\033</span><span class="s">[1m</span><span class="sh">'</span>
   <span class="n">UNDERLINE</span> <span class="o">=</span> <span class="sh">'</span><span class="se">\033</span><span class="s">[4m</span><span class="sh">'</span>
   <span class="n">END</span> <span class="o">=</span> <span class="sh">'</span><span class="se">\033</span><span class="s">[0m</span><span class="sh">'</span>
<span class="n">score</span> <span class="o">=</span> <span class="mi">0</span>
<span class="n">count</span> <span class="o">=</span> <span class="mi">0</span> 
<span class="n">image_list</span> <span class="o">=</span> <span class="p">[]</span> 
<span class="k">for</span> <span class="n">image</span> <span class="ow">in</span> <span class="n">glob</span><span class="p">.</span><span class="nf">glob</span><span class="p">(</span><span class="sh">'</span><span class="s">png1000px/*.png</span><span class="sh">'</span><span class="p">):</span>
    <span class="n">i</span> <span class="o">=</span> <span class="n">Image</span><span class="p">.</span><span class="nf">open</span><span class="p">(</span><span class="n">image</span><span class="p">)</span>
    <span class="n">image_list</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="n">i</span><span class="p">)</span> 
<span class="nf">print</span><span class="p">(</span><span class="n">color</span><span class="p">.</span><span class="n">BOLD</span> <span class="o">+</span> <span class="n">color</span><span class="p">.</span><span class="n">DARKCYAN</span> <span class="o">+</span> <span class="sh">'</span><span class="se">\n</span><span class="s">FLAG QUIZ</span><span class="se">\n</span><span class="sh">'</span> <span class="o">+</span> <span class="n">color</span><span class="p">.</span><span class="n">END</span><span class="p">)</span>
</code></pre></div></div>

<h4 id="define-the-flag-quiz-itself-1">Define the Flag Quiz itself</h4>

<p>We will loop over this many times as the user plays the game</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">flagQuiz</span><span class="p">():</span>
    <span class="nf">clear_output</span><span class="p">(</span><span class="n">wait</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
    <span class="k">global</span> <span class="n">score</span><span class="p">,</span> <span class="n">count</span>
    <span class="nf">print</span><span class="p">(</span><span class="n">color</span><span class="p">.</span><span class="n">BLUE</span> <span class="o">+</span> <span class="sh">'</span><span class="s">Score: </span><span class="sh">'</span> <span class="o">+</span> <span class="nf">str</span><span class="p">(</span><span class="n">score</span><span class="p">)</span> <span class="o">+</span> <span class="sh">'</span><span class="s">/</span><span class="sh">'</span> <span class="o">+</span> <span class="nf">str</span><span class="p">(</span><span class="n">count</span><span class="p">)</span> <span class="o">+</span> <span class="n">color</span><span class="p">.</span><span class="n">END</span><span class="p">)</span>
    <span class="n">uniqueCountries</span> <span class="o">=</span> <span class="n">random</span><span class="p">.</span><span class="nf">sample</span><span class="p">(</span><span class="nf">list</span><span class="p">(</span><span class="n">countriesDICT</span><span class="p">.</span><span class="nf">items</span><span class="p">()),</span><span class="mi">4</span><span class="p">)</span>
    <span class="n">randList</span> <span class="o">=</span> <span class="n">random</span><span class="p">.</span><span class="nf">sample</span><span class="p">([</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">],</span> <span class="mi">4</span><span class="p">)</span>
    <span class="nf">print</span><span class="p">(</span><span class="sh">'</span><span class="s">1.</span><span class="sh">'</span><span class="p">,</span><span class="n">uniqueCountries</span><span class="p">[</span><span class="n">randList</span><span class="p">[</span><span class="mi">0</span><span class="p">]][</span><span class="mi">1</span><span class="p">],</span><span class="sh">'</span><span class="se">\n</span><span class="sh">'</span>
            <span class="sh">'</span><span class="s">2.</span><span class="sh">'</span><span class="p">,</span><span class="n">uniqueCountries</span><span class="p">[</span><span class="n">randList</span><span class="p">[</span><span class="mi">1</span><span class="p">]][</span><span class="mi">1</span><span class="p">],</span><span class="sh">'</span><span class="se">\n</span><span class="sh">'</span>
            <span class="sh">'</span><span class="s">3.</span><span class="sh">'</span><span class="p">,</span><span class="n">uniqueCountries</span><span class="p">[</span><span class="n">randList</span><span class="p">[</span><span class="mi">2</span><span class="p">]][</span><span class="mi">1</span><span class="p">],</span><span class="sh">'</span><span class="se">\n</span><span class="sh">'</span>
            <span class="sh">'</span><span class="s">4.</span><span class="sh">'</span><span class="p">,</span><span class="n">uniqueCountries</span><span class="p">[</span><span class="n">randList</span><span class="p">[</span><span class="mi">3</span><span class="p">]][</span><span class="mi">1</span><span class="p">],</span><span class="sh">'</span><span class="se">\n</span><span class="sh">'</span><span class="p">)</span>
    <span class="n">optionsDict</span> <span class="o">=</span> <span class="p">{</span><span class="mi">1</span><span class="p">:</span><span class="n">uniqueCountries</span><span class="p">[</span><span class="n">randList</span><span class="p">[</span><span class="mi">0</span><span class="p">]][</span><span class="mi">1</span><span class="p">],</span><span class="mi">2</span><span class="p">:</span><span class="n">uniqueCountries</span><span class="p">[</span><span class="n">randList</span><span class="p">[</span><span class="mi">1</span><span class="p">]][</span><span class="mi">1</span><span class="p">],</span><span class="mi">3</span><span class="p">:</span><span class="n">uniqueCountries</span><span class="p">[</span><span class="n">randList</span><span class="p">[</span><span class="mi">2</span><span class="p">]][</span><span class="mi">1</span><span class="p">],</span><span class="mi">4</span><span class="p">:</span><span class="n">uniqueCountries</span><span class="p">[</span><span class="n">randList</span><span class="p">[</span><span class="mi">3</span><span class="p">]][</span><span class="mi">1</span><span class="p">]}</span>
    <span class="n">imgplot</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="nf">imshow</span><span class="p">(</span><span class="n">mpimg</span><span class="p">.</span><span class="nf">imread</span><span class="p">(</span><span class="sh">'</span><span class="s">png1000px/</span><span class="sh">'</span><span class="o">+</span><span class="nf">str</span><span class="p">(</span><span class="n">uniqueCountries</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">0</span><span class="p">].</span><span class="nf">lower</span><span class="p">())</span><span class="o">+</span><span class="sh">'</span><span class="s">.png</span><span class="sh">'</span><span class="p">))</span>    
    <span class="n">plt</span><span class="p">.</span><span class="nf">axis</span><span class="p">(</span><span class="sh">'</span><span class="s">off</span><span class="sh">'</span><span class="p">)</span>
    <span class="n">plt</span><span class="p">.</span><span class="nf">show</span><span class="p">()</span>
    <span class="k">while</span> <span class="bp">True</span><span class="p">:</span>
        <span class="k">try</span><span class="p">:</span>
            <span class="n">playerGuess</span> <span class="o">=</span> <span class="nf">input</span><span class="p">(</span><span class="sh">'</span><span class="s">Guess (enter </span><span class="sh">"</span><span class="s">n</span><span class="sh">"</span><span class="s"> to exit): </span><span class="sh">'</span><span class="p">)</span>
            <span class="k">if</span> <span class="n">playerGuess</span> <span class="o">==</span> <span class="sh">'</span><span class="s">n</span><span class="sh">'</span><span class="p">:</span>
                <span class="nf">print</span><span class="p">(</span><span class="sh">'</span><span class="se">\n</span><span class="sh">'</span> <span class="o">+</span> <span class="n">color</span><span class="p">.</span><span class="n">BOLD</span> <span class="o">+</span> <span class="n">color</span><span class="p">.</span><span class="n">BLUE</span> <span class="o">+</span> <span class="sh">'</span><span class="s">Final Score: </span><span class="sh">'</span> <span class="o">+</span> <span class="nf">str</span><span class="p">(</span><span class="n">score</span><span class="p">)</span> <span class="o">+</span> <span class="sh">'</span><span class="s">/</span><span class="sh">'</span> <span class="o">+</span> <span class="nf">str</span><span class="p">(</span><span class="n">count</span><span class="p">)</span> <span class="o">+</span> <span class="n">color</span><span class="p">.</span><span class="n">END</span><span class="p">)</span>
                <span class="nf">exit</span><span class="p">()</span>
            <span class="k">elif</span> <span class="nf">int</span><span class="p">(</span><span class="n">playerGuess</span><span class="p">)</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">:</span>
                <span class="k">raise</span> <span class="nb">ValueError</span>
            <span class="k">elif</span> <span class="nf">int</span><span class="p">(</span><span class="n">playerGuess</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mi">4</span><span class="p">:</span>
                <span class="k">raise</span> <span class="nb">ValueError</span>
            <span class="n">count</span> <span class="o">+=</span> <span class="mi">1</span>
            <span class="k">break</span>
        <span class="k">except</span> <span class="nb">ValueError</span><span class="p">:</span>
            <span class="nf">print</span><span class="p">(</span><span class="n">color</span><span class="p">.</span><span class="n">YELLOW</span> <span class="o">+</span> <span class="sh">'</span><span class="s">Guess must be between 1 &amp; 4</span><span class="sh">'</span> <span class="o">+</span> <span class="n">color</span><span class="p">.</span><span class="n">END</span><span class="p">)</span>
    <span class="k">if</span> <span class="n">optionsDict</span><span class="p">[</span><span class="nf">int</span><span class="p">(</span><span class="n">playerGuess</span><span class="p">)]</span> <span class="o">==</span> <span class="n">uniqueCountries</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">1</span><span class="p">]:</span>
        <span class="n">score</span> <span class="o">+=</span> <span class="mi">1</span>     
        <span class="nf">print</span><span class="p">(</span><span class="n">color</span><span class="p">.</span><span class="n">GREEN</span> <span class="o">+</span> <span class="n">color</span><span class="p">.</span><span class="n">BOLD</span> <span class="o">+</span> <span class="sh">'</span><span class="se">\n</span><span class="sh">'</span> <span class="o">+</span> <span class="n">uniqueCountries</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span> <span class="o">+</span> <span class="n">color</span><span class="p">.</span><span class="n">END</span><span class="p">)</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="nf">print</span><span class="p">(</span><span class="n">color</span><span class="p">.</span><span class="n">RED</span> <span class="o">+</span> <span class="n">color</span><span class="p">.</span><span class="n">BOLD</span> <span class="o">+</span> <span class="sh">'</span><span class="se">\n</span><span class="sh">'</span> <span class="o">+</span> <span class="n">optionsDict</span><span class="p">[</span><span class="nf">int</span><span class="p">(</span><span class="n">playerGuess</span><span class="p">)]</span> <span class="o">+</span> <span class="n">color</span><span class="p">.</span><span class="n">END</span><span class="p">,</span> <span class="sh">'</span><span class="se">\n</span><span class="sh">'</span> <span class="o">+</span>
        <span class="n">color</span><span class="p">.</span><span class="n">GREEN</span> <span class="o">+</span> <span class="n">color</span><span class="p">.</span><span class="n">BOLD</span> <span class="o">+</span> <span class="n">uniqueCountries</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span> <span class="o">+</span> <span class="n">color</span><span class="p">.</span><span class="n">END</span><span class="p">,</span> <span class="sh">'</span><span class="se">\n</span><span class="sh">'</span><span class="p">)</span>
    <span class="n">time</span><span class="p">.</span><span class="nf">sleep</span><span class="p">(</span><span class="mi">3</span><span class="p">)</span>
    <span class="nf">flagQuiz</span><span class="p">()</span>        
<span class="nf">flagQuiz</span><span class="p">()</span>
</code></pre></div></div>

<h3 id="conclusion">Conclusion</h3>

<p>Thank you for taking the time to check out this very simple flag quiz, all built in python, and playable in your terminal!</p>

<p>If you’re interested in more, checkout my other projects on this site or visit my GitHub account (<a href="https://github.com/LukeNelsn/">here</a> ↗)</p>]]></content><author><name>Luke</name></author><category term="projects" /><category term="projects" /><category term="python" /><category term="jupyter" /><category term="flagquiz" /><summary type="html"><![CDATA[This simple and fun game can be played from your own terminal, all with some simple python scripts.]]></summary></entry><entry><title type="html">Wordle in Python</title><link href="https://lukenelsn.github.io/jekyll-theme-yat/projects/2022/06/18/wordle-in-python.html" rel="alternate" type="text/html" title="Wordle in Python" /><published>2022-06-18T00:00:00+00:00</published><updated>2022-06-18T00:00:00+00:00</updated><id>https://lukenelsn.github.io/jekyll-theme-yat/projects/2022/06/18/wordle-in-python</id><content type="html" xml:base="https://lukenelsn.github.io/jekyll-theme-yat/projects/2022/06/18/wordle-in-python.html"><![CDATA[<p>This simple and fun game captivated the internet for weeks during 2022. Now, you can play the game from your own terminal, all with some simple python scripts.</p>

<p>The game is both rudimentary and simplistic, yet matches the design and style of the original internet sensation (<a href="https://www.nytimes.com/games/wordle/index.html">here</a> ↗). Feel free to modiify and change the game as you see fit!</p>

<p>This game runs perfectly just as a python file, and only requires the additional <code class="language-plaintext highlighter-rouge">wordle-answers-alphabetical.txt</code> file to be stored in the same directory as your <code class="language-plaintext highlighter-rouge">wordle.py</code> file, unless you want to reference the <code class="language-plaintext highlighter-rouge">.txt</code> file another way.</p>

<blockquote>
  <p>Each of these files can also be downloaded from my GitHub account (<a href="https://github.com/LukeNelsn/pyworlde">here</a> ↗)</p>
</blockquote>

<h2 id="python-wordle">Python Wordle</h2>

<p>Required modules: <code class="language-plaintext highlighter-rouge">random</code></p>

<h4 id="preliminary-importing-and-organization-of-our-words">Preliminary importing and organization of our words</h4>

<p>Let’s also establish a class of colors, and some score keeping metrics</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="n">random</span>
<span class="n">words_5</span> <span class="o">=</span> <span class="nf">list</span><span class="p">(</span><span class="nf">open</span><span class="p">(</span><span class="sh">'</span><span class="s">wordle-answers-alphabetical.txt</span><span class="sh">'</span><span class="p">,</span> <span class="sh">'</span><span class="s">r</span><span class="sh">'</span><span class="p">))</span>
<span class="n">words_5</span> <span class="o">=</span> <span class="nf">list</span><span class="p">(</span><span class="nf">map</span><span class="p">(</span><span class="k">lambda</span> <span class="n">s</span><span class="p">:</span> <span class="n">s</span><span class="p">.</span><span class="nf">strip</span><span class="p">(),</span> <span class="n">words_5</span><span class="p">))</span>
<span class="k">class</span> <span class="nc">color</span><span class="p">:</span>
   <span class="n">PURPLE</span> <span class="o">=</span> <span class="sh">'</span><span class="se">\033</span><span class="s">[95m</span><span class="sh">'</span>
   <span class="n">CYAN</span> <span class="o">=</span> <span class="sh">'</span><span class="se">\033</span><span class="s">[96m</span><span class="sh">'</span>
   <span class="n">DARKCYAN</span> <span class="o">=</span> <span class="sh">'</span><span class="se">\033</span><span class="s">[36m</span><span class="sh">'</span>
   <span class="n">BLUE</span> <span class="o">=</span> <span class="sh">'</span><span class="se">\033</span><span class="s">[94m</span><span class="sh">'</span>
   <span class="n">GREEN</span> <span class="o">=</span> <span class="sh">'</span><span class="se">\033</span><span class="s">[92m</span><span class="sh">'</span>
   <span class="n">YELLOW</span> <span class="o">=</span> <span class="sh">'</span><span class="se">\033</span><span class="s">[93m</span><span class="sh">'</span>
   <span class="n">RED</span> <span class="o">=</span> <span class="sh">'</span><span class="se">\033</span><span class="s">[91m</span><span class="sh">'</span>
   <span class="n">BOLD</span> <span class="o">=</span> <span class="sh">'</span><span class="se">\033</span><span class="s">[1m</span><span class="sh">'</span>
   <span class="n">UNDERLINE</span> <span class="o">=</span> <span class="sh">'</span><span class="se">\033</span><span class="s">[4m</span><span class="sh">'</span>
   <span class="n">END</span> <span class="o">=</span> <span class="sh">'</span><span class="se">\033</span><span class="s">[0m</span><span class="sh">'</span>
<span class="n">count</span> <span class="o">=</span> <span class="mi">0</span>
<span class="n">guesses</span> <span class="o">=</span> <span class="mi">0</span>
<span class="n">score</span> <span class="o">=</span> <span class="mi">0</span>
<span class="n">streak</span> <span class="o">=</span> <span class="mi">0</span>
</code></pre></div></div>

<h4 id="define-the-wordle-game-itself">Define the Wordle game itself</h4>

<p>We will loop over this many times as the user plays the game</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">wordleGame</span><span class="p">():</span> 
    <span class="nf">print</span><span class="p">(</span><span class="n">color</span><span class="p">.</span><span class="n">BOLD</span> <span class="o">+</span> <span class="n">color</span><span class="p">.</span><span class="n">DARKCYAN</span> <span class="o">+</span> <span class="sh">'</span><span class="se">\n</span><span class="s">WORDLE</span><span class="se">\n</span><span class="sh">'</span> <span class="o">+</span> <span class="n">color</span><span class="p">.</span><span class="n">END</span><span class="p">)</span>
    <span class="n">word</span> <span class="o">=</span> <span class="p">(</span><span class="n">words_5</span><span class="p">[</span><span class="n">random</span><span class="p">.</span><span class="nf">randrange</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nf">len</span><span class="p">(</span><span class="n">words_5</span><span class="p">))]).</span><span class="nf">lower</span><span class="p">()</span>
    <span class="k">def</span> <span class="nf">guessingFunction</span><span class="p">():</span>
        <span class="k">global</span> <span class="n">count</span><span class="p">,</span> <span class="n">guesses</span><span class="p">,</span> <span class="n">score</span><span class="p">,</span> <span class="n">streak</span>       
        <span class="k">while</span> <span class="bp">True</span><span class="p">:</span>
            <span class="k">try</span><span class="p">:</span>
                <span class="n">word_guess</span> <span class="o">=</span> <span class="p">(</span><span class="nf">input</span><span class="p">(</span><span class="sh">'</span><span class="s">Guess: </span><span class="sh">'</span><span class="p">)).</span><span class="nf">lower</span><span class="p">()</span>
                <span class="k">if</span> <span class="nf">len</span><span class="p">(</span><span class="n">word_guess</span><span class="p">)</span> <span class="o">!=</span> <span class="mi">5</span><span class="p">:</span>
                    <span class="k">raise</span> <span class="nb">ValueError</span>
                <span class="k">elif</span> <span class="n">word_guess</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">words_5</span><span class="p">:</span>
                    <span class="k">raise</span> <span class="nb">ValueError</span>
                <span class="k">break</span>
            <span class="k">except</span> <span class="nb">ValueError</span><span class="p">:</span>
                <span class="nf">print</span><span class="p">(</span><span class="n">color</span><span class="p">.</span><span class="n">YELLOW</span> <span class="o">+</span> <span class="sh">'</span><span class="s">Guess must be 5 letters long &amp; in the English dictionary</span><span class="sh">'</span> <span class="o">+</span> <span class="n">color</span><span class="p">.</span><span class="n">END</span><span class="p">)</span>
        <span class="k">if</span> <span class="n">word_guess</span> <span class="o">==</span> <span class="n">word</span><span class="p">:</span>
            <span class="nf">print</span><span class="p">(</span><span class="n">color</span><span class="p">.</span><span class="n">GREEN</span> <span class="o">+</span> <span class="n">color</span><span class="p">.</span><span class="n">BOLD</span> <span class="o">+</span> <span class="n">word</span> <span class="o">+</span> <span class="sh">'</span><span class="se">\n</span><span class="sh">'</span> <span class="o">+</span> <span class="sh">'</span><span class="s">You Win!</span><span class="sh">'</span> <span class="o">+</span> <span class="n">color</span><span class="p">.</span><span class="n">END</span><span class="p">)</span>
            <span class="n">score</span> <span class="o">+=</span> <span class="mi">1</span>
            <span class="nf">print</span><span class="p">(</span><span class="n">color</span><span class="p">.</span><span class="n">PURPLE</span> <span class="o">+</span> <span class="sh">'</span><span class="se">\n</span><span class="s">Score: </span><span class="sh">'</span> <span class="o">+</span> <span class="n">color</span><span class="p">.</span><span class="n">BOLD</span> <span class="o">+</span> <span class="nf">str</span><span class="p">(</span><span class="n">score</span><span class="p">)</span> <span class="o">+</span> <span class="n">color</span><span class="p">.</span><span class="n">END</span><span class="p">)</span>
            <span class="n">streak</span> <span class="o">+=</span> <span class="mi">1</span>
            <span class="nf">print</span><span class="p">(</span><span class="n">color</span><span class="p">.</span><span class="n">PURPLE</span> <span class="o">+</span> <span class="sh">'</span><span class="se">\n</span><span class="s">Streak: </span><span class="sh">'</span> <span class="o">+</span> <span class="n">color</span><span class="p">.</span><span class="n">BOLD</span> <span class="o">+</span> <span class="nf">str</span><span class="p">(</span><span class="n">streak</span><span class="p">)</span> <span class="o">+</span> <span class="n">color</span><span class="p">.</span><span class="n">END</span><span class="p">)</span>
            <span class="n">count</span> <span class="o">=</span> <span class="mi">0</span>
            <span class="n">guesses</span> <span class="o">=</span> <span class="mi">0</span>
        <span class="k">elif</span> <span class="n">word_guess</span> <span class="o">!=</span> <span class="n">word</span><span class="p">:</span>
            <span class="n">word_index</span> <span class="o">=</span> <span class="mi">0</span>
            <span class="n">word_guess_ouput</span> <span class="o">=</span> <span class="p">[]</span>
            <span class="k">for</span> <span class="n">letter</span> <span class="ow">in</span> <span class="n">word_guess</span><span class="p">:</span>
                <span class="k">if</span> <span class="n">letter</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">word</span><span class="p">:</span>
                    <span class="n">word_index</span> <span class="o">+=</span> <span class="mi">1</span>
                    <span class="n">word_guess_ouput</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="n">letter</span><span class="p">)</span>
                <span class="k">elif</span> <span class="n">letter</span> <span class="o">==</span> <span class="n">word</span><span class="p">[</span><span class="n">word_index</span><span class="p">]:</span>
                    <span class="n">word_index</span> <span class="o">+=</span> <span class="mi">1</span>
                    <span class="n">word_guess_ouput</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="n">color</span><span class="p">.</span><span class="n">GREEN</span> <span class="o">+</span> <span class="n">letter</span> <span class="o">+</span> <span class="n">color</span><span class="p">.</span><span class="n">END</span><span class="p">)</span>
                    <span class="k">continue</span>
                <span class="k">else</span><span class="p">:</span>
                    <span class="n">word_guess_ouput</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="n">color</span><span class="p">.</span><span class="n">BLUE</span> <span class="o">+</span> <span class="n">letter</span> <span class="o">+</span> <span class="n">color</span><span class="p">.</span><span class="n">END</span><span class="p">)</span>
                    <span class="n">word_index</span> <span class="o">+=</span> <span class="mi">1</span>
                    <span class="k">continue</span>         
            <span class="n">count</span> <span class="o">+=</span> <span class="mi">1</span>
            <span class="n">guesses</span> <span class="o">+=</span> <span class="mi">1</span>
            <span class="nf">print</span><span class="p">(</span><span class="sh">'</span><span class="s">Guess</span><span class="sh">'</span><span class="p">,</span><span class="nf">str</span><span class="p">(</span><span class="n">guesses</span><span class="p">)</span><span class="o">+</span><span class="sh">'</span><span class="s">/6:</span><span class="sh">'</span><span class="p">,</span><span class="sh">""</span><span class="p">.</span><span class="nf">join</span><span class="p">(</span><span class="n">word_guess_ouput</span><span class="p">))</span>
            <span class="k">if</span> <span class="n">count</span> <span class="o">==</span> <span class="mi">6</span><span class="p">:</span>
                <span class="n">score</span> <span class="o">+=</span> <span class="mi">0</span>
                <span class="nf">print</span><span class="p">(</span><span class="n">color</span><span class="p">.</span><span class="n">PURPLE</span> <span class="o">+</span> <span class="sh">'</span><span class="se">\n</span><span class="s">Score: </span><span class="sh">'</span> <span class="o">+</span> <span class="n">color</span><span class="p">.</span><span class="n">BOLD</span> <span class="o">+</span> <span class="nf">str</span><span class="p">(</span><span class="n">score</span><span class="p">)</span> <span class="o">+</span> <span class="n">color</span><span class="p">.</span><span class="n">END</span><span class="p">)</span>
                <span class="n">streak</span> <span class="o">=</span> <span class="mi">0</span>
                <span class="nf">print</span><span class="p">(</span><span class="n">color</span><span class="p">.</span><span class="n">PURPLE</span> <span class="o">+</span> <span class="sh">'</span><span class="se">\n</span><span class="s">Streak: </span><span class="sh">'</span> <span class="o">+</span> <span class="n">color</span><span class="p">.</span><span class="n">BOLD</span> <span class="o">+</span> <span class="nf">str</span><span class="p">(</span><span class="n">streak</span><span class="p">)</span> <span class="o">+</span> <span class="n">color</span><span class="p">.</span><span class="n">END</span><span class="p">)</span>
                <span class="nf">print</span><span class="p">(</span><span class="sh">'</span><span class="se">\n</span><span class="sh">'</span> <span class="o">+</span> <span class="n">color</span><span class="p">.</span><span class="n">RED</span> <span class="o">+</span> <span class="n">color</span><span class="p">.</span><span class="n">BOLD</span> <span class="o">+</span> <span class="sh">'</span><span class="s">You lose...</span><span class="se">\n</span><span class="s">The correct word was:</span><span class="sh">'</span><span class="p">,</span> <span class="n">color</span><span class="p">.</span><span class="n">UNDERLINE</span> <span class="o">+</span> <span class="n">color</span><span class="p">.</span><span class="n">YELLOW</span> <span class="o">+</span> <span class="n">word</span> <span class="o">+</span> <span class="n">color</span><span class="p">.</span><span class="n">END</span><span class="p">)</span>
                <span class="n">count</span> <span class="o">=</span> <span class="mi">0</span>
                <span class="n">guesses</span> <span class="o">=</span> <span class="mi">0</span>
            <span class="k">else</span><span class="p">:</span>
                <span class="nf">guessingFunction</span><span class="p">()</span>   
    <span class="nf">guessingFunction</span><span class="p">()</span>
    <span class="n">rerun</span> <span class="o">=</span> <span class="nf">input</span><span class="p">(</span><span class="sh">'</span><span class="se">\n</span><span class="s">Would you like to play again?</span><span class="sh">''</span><span class="se">\n</span><span class="s">(y/n): </span><span class="sh">'</span><span class="p">)</span>
    <span class="k">if</span> <span class="n">rerun</span> <span class="o">==</span> <span class="sh">'</span><span class="s">y</span><span class="sh">'</span><span class="p">:</span>
        <span class="nf">wordleGame</span><span class="p">()</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="nf">print</span><span class="p">(</span><span class="sh">'</span><span class="s">Goodbye!</span><span class="se">\n</span><span class="sh">'</span><span class="p">)</span>
        <span class="nf">exit</span><span class="p">()</span>
<span class="nf">wordleGame</span><span class="p">()</span>
</code></pre></div></div>

<h3 id="conclusion">Conclusion</h3>

<p>Thank you for taking the time to check out this very simple version of worlde, all built in python, and playable in your terminal!</p>

<p>If you’re interested in more, checkout my other projects on this site or visit my GitHub account (<a href="https://github.com/LukeNelsn/">here</a> ↗)</p>]]></content><author><name>Luke</name></author><category term="projects" /><category term="projects" /><category term="python" /><category term="wordle" /><summary type="html"><![CDATA[This simple and fun game captivated the internet for weeks during 2022. Now, you can play the game from your own terminal, all with some simple python scripts.]]></summary></entry><entry><title type="html">Welcome to my portfolio</title><link href="https://lukenelsn.github.io/jekyll-theme-yat/welcome/2022/06/16/welcome-to-my-portfolio.html" rel="alternate" type="text/html" title="Welcome to my portfolio" /><published>2022-06-16T00:00:00+00:00</published><updated>2022-06-16T00:00:00+00:00</updated><id>https://lukenelsn.github.io/jekyll-theme-yat/welcome/2022/06/16/welcome-to-my-portfolio</id><content type="html" xml:base="https://lukenelsn.github.io/jekyll-theme-yat/welcome/2022/06/16/welcome-to-my-portfolio.html"><![CDATA[<p>Hi there!</p>

<p>My name is Luke Nelson, a recent gruaduate from the Leeds School of Business. Here you will find snippets of my previous projects and current work. Although I studied finance and information management, I have always been interested in computers and the ability to leverage our tasks with them.</p>

<p>This site is a constant work in progress, so please excuse any typos or errors in it’s development…</p>

<h2 id="incoming-articles--posts">Incoming Articles &amp; Posts:</h2>

<h3 id="python">Python</h3>
<ul>
  <li>Python for Finance - Review and problem-solving mostly insprired by the ‘Python for Finance’ textbook (Yves Hilpisch)</li>
  <li>Formula 1 data analytics (e.g. teammate lap time spreads; which teammates are the furthest (or closest) in their lap times)</li>
</ul>]]></content><author><name>Luke</name></author><category term="welcome" /><category term="welcome" /><category term="markdown" /><summary type="html"><![CDATA[Hi there!]]></summary></entry></feed>